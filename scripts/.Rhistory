variable <- na.omit(variable)
q2 <- variable
# export .csv
#write.csv(q2, "/Users/abbeyyatsko/Downloads/q2.csv")
q2fig <- q2[q2$sample]
# boxplot of individual mounds
q2samps <- q2[q2$sample]
# boxplot of individual mounds
q2[q2$sample]
q2
# boxplot of individual mounds
q2_samps <- as.vector(q2$sample)
View(mounds)
q2_samps <- mounds[ mounds$sample %in% q2_samps, ]
View(q2_samps)
unique(q2_samps$sample)
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
theme_light()
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -flux), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("Mound")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -flux), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ggpubr)
CO2_fluxfinal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CO2_fluxfinalTMI.csv")
CH4_fluxfinal<- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinalTMI.csv")
View(CH4_fluxfinal)
species <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/Abbey termites .xlsx - Sheet1.csv")
species <- species[c("X", "ID_cleaned")]
# merge sp and CH4flux_final, CO2_fluxfinal
species <- species %>%
rename(sample = X)
CH4_fluxfinal <- merge(CH4_fluxfinal, species, by = c("sample"))
CO2_fluxfinal <- merge(CO2_fluxfinal, species, by = c("sample"))
# new column for methane:co2
# first need to convert CO2 from mmol to umol (in order to match CH4 in units of umol)
# (conversion factor 1000umol = 1mmol)
CO2_fluxfinal$flux.CO2_umol <- CO2_fluxfinal$flux.CO2*1000
CO2_fluxfinal <- CO2_fluxfinal %>% relocate(flux.CO2_umol, .after = flux.CO2)
CH4_fluxfinal$ch4_co2 <-  CH4_fluxfinal$flux.CH4/CO2_fluxfinal$flux.CO2
CH4_fluxfinal <- CH4_fluxfinal %>% relocate(ch4_co2, .after = flux.CH4)
# new column to add arboreal
CO2_fluxfina$arboreal[CO2_fluxfinal$chamber == "mini"] <- 1
# new column to add arboreal
CO2_fluxfinal$arboreal[CO2_fluxfinal$chamber == "mini"] <- 1
View(CO2_fluxfinal)
CO2_fluxfinal$arboreal[!CO2_fluxfinal$chamber == "mini"] <- 0
summary(CO2_fluxfinal$arboreal)
table(CO2_fluxfinal$arboreal)
CH4_fluxfinal$arboreal[CH4_fluxfinal$chamber == "mini"] <- 1
CH4_fluxfinal$arboreal[!CH4_fluxfinal$chamber == "mini"] <- 0
# subset df to create just soils and just mounds (for later on. just to have df prepped)
soils <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 's',]
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
mounds$arboreal == 1
list(mounds$arboreal == 1)
summary(mounds$arboreal==1)
mounds$arboreal[mounds$arboreal == 1]
soils$arboreal[soils$arboreal == 1]
# arboreal only
arboreal <- mounds[mounds$arboreal == 1]
# arboreal only
arboreal <- mounds[mounds$arboreal == 1,]
View(arboreal)
mounds <- mounds[mounds$arboreal == 0,]
# mounds all, colored by species
a1 <- ggplot(data = mounds, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylab("CH4 flux umol/d/m2")+
labs(title = "mound")
# soils all, colored by species
a2 <- ggplot(data = soils, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylab("CH4 flux umol/d/m2")+
labs(title = "soil")
ggarrange(a1, a2, ncol=1)
# same as above but with CH4:CO2
a3 <- ggplot(data = mounds, aes(x = as.factor(sample), y = ch4_co2, fill = ID_cleaned)) +
geom_boxplot()+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,50)+ # for outliers
labs(title = "mound")
a4 <- ggplot(data = soils, aes(x = as.factor(sample), y = ch4_co2, fill = ID_cleaned)) +
geom_boxplot()+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,2.5)+ # for outliers
labs(title = "soil")
ggarrange(a3, a4, ncol=1)
# merge in real time data from GPS records of mound being tagged (this is an overall mound estimate)
time <- read.csv("/Users/abbeyyatsko/Downloads/mound_gps (1).csv")
time <- time[c("name", "realtime")]
names(time)[1] <- 'sample'
CH4_fluxfinal <- merge(CH4_fluxfinal, time, by = c("sample"))
CH4_fluxfinal <- CH4_fluxfinal %>% relocate(realtime, .after = Time_start)
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
soils <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 's',]
# scatter plot for flux by time of day (for mounds)
g1 <- ggplot(data = mounds, aes(x = as.factor(realtime), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
scale_x_discrete(guide = guide_axis(angle = 90)) +
theme_light()
# scatter plot for flux by time of day (for soils)
g2 <- ggplot(data = soils, aes(x = as.factor(realtime), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
scale_x_discrete(guide = guide_axis(angle = 90)) +
theme_light()
ggarrange(g1, g2, ncol = 1)
#### TODAY #####
# using radial graph for mounds
g3 <- ggplot(data = moundsCO2, aes(x = as.factor(realtime), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
scale_y_continuous(limits = c(-1, 15000))+
theme_light()+
coord_polar()
g <- ggplot(data = CH4_fluxfinal, aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = flux_source)) +
geom_boxplot()+
geom_point(aes(col=position), position = "jitter")+
ylab("CH4 flux umol/d/m2")+
theme_light()
g
c1 <- ggplot(data = mounds, aes(x = as.factor(position), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
c2 <- ggplot(data = mounds, aes(x = as.factor(position), y = ch4_co2, fill = ID_cleaned)) +
geom_boxplot()+
ylim(0,50)+ # for outliers
theme_light()
ggarrange(c1, c2, ncol = 1)
# soils
c3 <- ggplot(data = soils, aes(x = as.factor(position), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
c3
g <- ggplot(data = CH4_fluxfinal, aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = flux_source)) +
geom_boxplot()+
geom_point(aes(col=position), position = "jitter")+
ylab("CH4 flux umol/d/m2")+
theme_light()
g
write.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
write.csv(mounds, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
mounds2 <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
View(mounds2)
mounds <- mounds[,-1]
mounds <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
mounds <- mounds[,-1]
View(mounds)
avgflux <- aggregate(mounds$flux.CH4, list(mounds$sample), FUN=mean)
y <- mounds[, c("sample",  "ID_cleaned")]
avgflux <- left_join(avgflux, y, by = c("Group.1"="sample"))
avgflux <- unique(avgflux)
# average methane flux by species
ggplot(data = avgflux, aes(x = as.factor(ID_cleaned), y = x)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# remove entries without species ID
mounds[mounds==""] <- NA
mounds <- mounds[!is.na(mounds$ID_cleaned),]
avgflux <- aggregate(mounds$flux.CH4, list(mounds$sample), FUN=mean)
y <- mounds[, c("sample",  "ID_cleaned")]
avgflux <- left_join(avgflux, y, by = c("Group.1"="sample"))
avgflux <- unique(avgflux)
# average methane flux by species
ggplot(data = avgflux, aes(x = as.factor(ID_cleaned), y = x)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# pick out top 5 highest methane fluxes by species
top <- avgflux %>%
arrange(desc(x)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
top$rank <- "top"
top
# pick out bottom 5 lowest methane fluxes by species
bottom <- avgflux %>%
arrange(x) %>%
group_by(ID_cleaned) %>%
slice(1:5)
bottom$rank <- "bottom"
bottom
# remove entries without species info, clean up df
q1 <- rbind(top, bottom)
q1 <- q1 %>%
rename(sample = Group.1,
flux = x)
View(q1)
View(arboreal)
species <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/Abbey termites .xlsx - Sheet1.csv")
species <- species[c("X", "ID_cleaned")]
# merge sp and CH4flux_final, CO2_fluxfinal
species <- species %>%
rename(sample = X)
CH4_fluxfinal <- merge(CH4_fluxfinal, species, by = c("sample"))
CO2_fluxfinal <- merge(CO2_fluxfinal, species, by = c("sample"))
# new column for methane:co2
# first need to convert CO2 from mmol to umol (in order to match CH4 in units of umol)
# (conversion factor 1000umol = 1mmol)
CO2_fluxfinal$flux.CO2_umol <- CO2_fluxfinal$flux.CO2*1000
CO2_fluxfinal <- CO2_fluxfinal %>% relocate(flux.CO2_umol, .after = flux.CO2)
CH4_fluxfinal$ch4_co2 <-  CH4_fluxfinal$flux.CH4/CO2_fluxfinal$flux.CO2
CH4_fluxfinal <- CH4_fluxfinal %>% relocate(ch4_co2, .after = flux.CH4)
# new column to add arboreal where 1 = arboreal, 0 = not arboreal
CO2_fluxfinal$arboreal[CO2_fluxfinal$chamber == "mini"] <- 1
CO2_fluxfinal$arboreal[!CO2_fluxfinal$chamber == "mini"] <- 0
CH4_fluxfinal$arboreal[CH4_fluxfinal$chamber == "mini"] <- 1
CH4_fluxfinal$arboreal[!CH4_fluxfinal$chamber == "mini"] <- 0
# subset df to create just soils and just mounds (for later on. just to have df prepped)
soils <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 's',]
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
# omit arboreal
mounds <- mounds[mounds$arboreal == 0,]
write.csv(mounds, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
mounds <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
mounds <- mounds[,-1]
# remove entries without species ID
mounds[mounds==""] <- NA
mounds <- mounds[!is.na(mounds$ID_cleaned),]
avgflux <- aggregate(mounds$flux.CH4, list(mounds$sample), FUN=mean)
y <- mounds[, c("sample",  "ID_cleaned")]
avgflux <- left_join(avgflux, y, by = c("Group.1"="sample"))
avgflux <- unique(avgflux)
# average methane flux by species
ggplot(data = avgflux, aes(x = as.factor(ID_cleaned), y = x)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# anova on mound averages between species
aov.3 <- aov(x ~ ID_cleaned, data = avgflux)
summary(aov.3)
TukeyHSD(aov.3)
# pick out top 5 highest methane fluxes by species
top <- avgflux %>%
arrange(desc(x)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
top$rank <- "top"
top
# pick out bottom 5 lowest methane fluxes by species
bottom <- avgflux %>%
arrange(x) %>%
group_by(ID_cleaned) %>%
slice(1:5)
bottom$rank <- "bottom"
bottom
# remove entries without species info, clean up df
q1 <- rbind(top, bottom)
q1 <- q1 %>%
rename(sample = Group.1,
flux = x)
# omit arboreal
mounds <- mounds[mounds$arboreal == 0,]
CO2_fluxfinal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CO2_fluxfinalTMI.csv")
CH4_fluxfinal<- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinalTMI.csv")
species <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/Abbey termites .xlsx - Sheet1.csv")
species <- species[c("X", "ID_cleaned")]
# merge sp and CH4flux_final, CO2_fluxfinal
species <- species %>%
rename(sample = X)
CH4_fluxfinal <- merge(CH4_fluxfinal, species, by = c("sample"))
CO2_fluxfinal <- merge(CO2_fluxfinal, species, by = c("sample"))
# new column for methane:co2
# first need to convert CO2 from mmol to umol (in order to match CH4 in units of umol)
# (conversion factor 1000umol = 1mmol)
CO2_fluxfinal$flux.CO2_umol <- CO2_fluxfinal$flux.CO2*1000
CO2_fluxfinal <- CO2_fluxfinal %>% relocate(flux.CO2_umol, .after = flux.CO2)
CH4_fluxfinal$ch4_co2 <-  CH4_fluxfinal$flux.CH4/CO2_fluxfinal$flux.CO2
CH4_fluxfinal <- CH4_fluxfinal %>% relocate(ch4_co2, .after = flux.CH4)
# new column to add arboreal where 1 = arboreal, 0 = not arboreal
CO2_fluxfinal$arboreal[CO2_fluxfinal$chamber == "mini"] <- 1
CO2_fluxfinal$arboreal[!CO2_fluxfinal$chamber == "mini"] <- 0
CH4_fluxfinal$arboreal[CH4_fluxfinal$chamber == "mini"] <- 1
CH4_fluxfinal$arboreal[!CH4_fluxfinal$chamber == "mini"] <- 0
View(CH4_fluxfinal)
# subset df to create just methane from soils and just mounds (for later on. just to have df prepped)
soils <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 's',]
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
View(mounds)
# omit arboreal from mound measurements
mounds <- mounds[mounds$arboreal == 0,]
unique(mounds$arboreal)
write.csv(mounds, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
# arboreal only
arboreal <- mounds[mounds$arboreal == 1,]
View(arboreal)
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
# arboreal only
arboreal <- mounds[mounds$arboreal == 1,]
# omit arboreal from mound measurements
mounds <- mounds[mounds$arboreal == 0,]
unique(mounds$arboreal)
write.csv(mounds, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
mounds <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
mounds <- mounds[,-1]
# remove entries without species ID
mounds[mounds==""] <- NA
mounds <- mounds[!is.na(mounds$ID_cleaned),]
avgflux <- aggregate(mounds$flux.CH4, list(mounds$sample), FUN=mean)
y <- mounds[, c("sample",  "ID_cleaned")]
avgflux <- left_join(avgflux, y, by = c("Group.1"="sample"))
avgflux <- unique(avgflux)
# average methane flux by species
ggplot(data = avgflux, aes(x = as.factor(ID_cleaned), y = x)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# anova on mound averages between species
aov.3 <- aov(x ~ ID_cleaned, data = avgflux)
summary(aov.3)
TukeyHSD(aov.3)
# pick out top 5 highest methane fluxes by species
top <- avgflux %>%
arrange(desc(x)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
top$rank <- "top"
top
# pick out bottom 5 lowest methane fluxes by species
bottom <- avgflux %>%
arrange(x) %>%
group_by(ID_cleaned) %>%
slice(1:5)
bottom$rank <- "bottom"
bottom
# remove entries without species info, clean up df
q1 <- rbind(top, bottom)
q1 <- q1 %>%
rename(sample = Group.1,
flux = x)
View(q1)
write.csv(q1, "/Users/abbeyyatsko/Downloads/q1.csv")
# calculate min and max flux for each sample
data_min <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(min = min))
data_max <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(max = max))
minmax <- merge(data_max, data_min, by="sample")
minmax$range <- minmax$max - minmax$min
# merge in species info
minmax <- left_join(minmax, y, by = "sample")
minmax <- unique(minmax)
# range in intermound methane production by sample
ggplot(data = minmax, aes(x = as.factor(ID_cleaned), y = range)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# range in intermound methane production by sample
ggplot(data = minmax, aes(x = as.factor(ID_cleaned), y = range)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# choose 5 most variable mounds (greatest range)
variable <- minmax %>%
arrange(desc(range)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
variable
q2 <- variable
View(q2)
write.csv(q2, "/Users/abbeyyatsko/Downloads/q2.csv")
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -flux), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# boxplot of individual mounds
q2_samps <- as.vector(q2$sample)
q2_samps <- mounds[ mounds$sample %in% q2_samps, ]
unique(q2_samps$sample)
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
View(q1)
View(q2_samps)
# q1: pooling all samples of mound
length(q1)
# q1: pooling all samples of mound
dim(q1)
# q2: sequencing all individual samples within select mounds
dim(q2_samps)
30 + 68
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ggpubr)
CO2_fluxfinal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CO2_fluxfinalTMI.csv")
CH4_fluxfinal<- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinalTMI.csv")
species <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/Abbey termites .xlsx - Sheet1.csv")
species <- species[c("X", "ID_cleaned")]
# merge sp and CH4flux_final, CO2_fluxfinal
species <- species %>%
rename(sample = X)
CH4_fluxfinal <- merge(CH4_fluxfinal, species, by = c("sample"))
CO2_fluxfinal <- merge(CO2_fluxfinal, species, by = c("sample"))
# new column for methane:co2
# first need to convert CO2 from mmol to umol (in order to match CH4 in units of umol)
# (conversion factor 1000umol = 1mmol)
CO2_fluxfinal$flux.CO2_umol <- CO2_fluxfinal$flux.CO2*1000
CO2_fluxfinal <- CO2_fluxfinal %>% relocate(flux.CO2_umol, .after = flux.CO2)
CH4_fluxfinal$ch4_co2 <-  CH4_fluxfinal$flux.CH4/CO2_fluxfinal$flux.CO2
CH4_fluxfinal <- CH4_fluxfinal %>% relocate(ch4_co2, .after = flux.CH4)
# new column to add arboreal where 1 = arboreal, 0 = not arboreal
CO2_fluxfinal$arboreal[CO2_fluxfinal$chamber == "mini"] <- 1
CO2_fluxfinal$arboreal[!CO2_fluxfinal$chamber == "mini"] <- 0
CH4_fluxfinal$arboreal[CH4_fluxfinal$chamber == "mini"] <- 1
CH4_fluxfinal$arboreal[!CH4_fluxfinal$chamber == "mini"] <- 0
# subset df to create just methane from soils and just mounds (for later on. just to have df prepped)
soils <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 's',]
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
# arboreal only
arboreal <- mounds[mounds$arboreal == 1,]
# omit arboreal from mound measurements
mounds <- mounds[mounds$arboreal == 0,]
# write.csv(mounds, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
View(arboreal)

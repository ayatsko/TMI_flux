y1 <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_fluxCH4=mean(flux.CH4),mean_fluxCO2=mean(flux.CO2_umol), mean_fluxCH4CO2=mean(ch4_co2) )
# merge in real time data from GPS records of mound being tagged (this is an overall mound estimate for the may campaign mounds)
maymounds <- mounds[mounds$campaign == "may22",]
maymounds_rm <- maymounds[maymounds$sample %in% target_mounds,]
novmounds <- mounds[mounds$campaign == "nov22",]
novmounds_rm <- novmounds[novmounds$sample %in% target_mounds,]
maytime <- read.csv("/Users/abbeyyatsko/Downloads/mound_gps (1).csv")
maytime <- maytime[c("name", "realtime")]
names(maytime)[1] <- 'sample'
maymounds <- merge(maymounds_rm, maytime, by = c("sample"))
maymounds <- maymounds %>% relocate(realtime, .after = Time_start)
maymounds$realtime <- strptime(maymounds$realtime, "%H:%M")
novtime <- read.csv("/Users/abbeyyatsko/Downloads/novtimes.csv")
names(novtime)[2] <- 'realtime'
novmounds <- merge(novmounds_rm, novtime, by = c("sample"))
novmounds <- novmounds %>% relocate(realtime, .after = Time_start)
novmounds$realtime <- strptime(novmounds$realtime, "%H:%M")
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = avg_respT , y = flux.CH4)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "lm")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 7)) +
xlab("Average mound surface temperature (C)")+
ylab("CH4 flux (umol/d/m2)")
summary(lm(avg_respT ~ as.POSIXct(realtime), data = rbind(maymounds, novmounds)[rbind(maymounds, novmounds)$ID_cleaned == "Copto",]))
summary(lm(flux.CH4 ~ avg_respT, data = rbind(maymounds, novmounds)))
# plot for flux by time of day - nov
ggplot(data = novmounds, aes(x = avg_respT, y = log(flux.CH4))) +
geom_point()+
geom_smooth(method = "lm")+
facet_wrap(~ID_cleaned, ncol =1)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 5))
summary(lm(flux.CH4 ~  avg_respT, data = novmounds[novmounds$ID_cleaned == "Ami",]))
# scatter plot - methane
h1 <- ggplot(data = mounds_ID[!mounds_ID$ID_cleaned == "Macro",], aes(x = avg_respT, y = flux.CH4, color = ID_cleaned)) +
geom_point(aes(color = ID_cleaned))+
geom_smooth(method = 'loess', se = FALSE)+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
scale_color_brewer("Blues") +
#facet_wrap(~campaign)+ # take this out to look at overall temperature effect
guides(color=guide_legend(title="Campaign"))+
theme_linedraw()
# lm by species for both may/nov
may <- mounds_ID[mounds_ID$campaign == "may22",]
nov <- mounds_ID[mounds_ID$campaign == "nov22",]
summary(lm(flux.CH4 ~ avg_respT, data = mounds_ID))
# run linear model
mounds_ID %>%
group_by(ID_cleaned) %>%
group_split() %>%
map_dfr(.f = function(mounds_ID){
lm(flux.CH4 ~ avg_respT, data = mounds_ID) %>%
glance() %>%
add_column(SPECIES = unique(mounds_ID$ID_cleaned), .before=1)
})
h2 <- ggplot(data = mounds_ID, aes(x = avg_respT, y = flux.CO2_umol)) +
geom_point()+
geom_smooth(method = 'lm')+
ylab("CO2 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
facet_wrap(~ID_cleaned, scales = "free_x")+
scale_color_brewer("Blues") +
guides(color=guide_legend(title="Campaign"))+
theme_linedraw()
# run linear model
mounds_ID %>%
group_by(ID_cleaned) %>%
group_split() %>%
map_dfr(.f = function(mounds_ID){
lm(flux.CO2_umol ~ avg_respT, data = mounds_ID) %>%
glance() %>%
add_column(SPECIES = unique(mounds_ID$ID_cleaned), .before=1)
})
h3 <- ggplot(data = mounds_ID, aes(x = avg_respT, y = ch4_co2)) +
geom_point()+
geom_smooth(method = 'lm')+
ylab("CH4:CO2")+
xlab("Average Mound Surface Temperature (C)")+
facet_wrap(~ID_cleaned, scales = "free_x")+
scale_color_brewer("Blues") +
guides(color=guide_legend(title="Campaign"))+
theme_linedraw()
# run linear model
mounds_ID %>%
group_by(ID_cleaned) %>%
group_split() %>%
map_dfr(.f = function(mounds_ID){
lm(ch4_co2 ~ avg_respT, data = mounds_ID) %>%
glance() %>%
add_column(SPECIES = unique(mounds_ID$ID_cleaned), .before=1)
})
ggarrange(h1, h2, h3, ncol = 1, common.legend = TRUE)
# average temperature by mound via campaign
mounds_ID$mound_campaign <- paste(mounds_ID$sample,mounds_ID$campaign, sep = "-")
x <- aggregate(mounds_ID$avg_respT, list(mounds_ID$mound_campaign), FUN=mean)
colnames(x)[1] = "mound_campaign"
colnames(x)[2] = "mound_temp"
mounds_ID <- merge(mounds_ID, x, by = c("mound_campaign"))
str(mounds_ID)
mounds_ID$campaign <- as.factor(mounds_ID$campaign)
h4 <- ggplot(data = mounds_ID, aes(x = mound_temp, y = flux.CH4, fill = as.factor(sample))) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
facet_grid(campaign~ID_cleaned)+
theme(legend.position="none")+
scale_fill_viridis(discrete = TRUE, option = "D")+
ylim(0,16000) # for outliers
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y1 <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_fluxCH4=mean(flux.CH4),mean_fluxCO2=mean(flux.CO2_umol), mean_fluxCH4CO2=mean(ch4_co2) )
y1 <- separate(y1, col=mound_campaign, into=c('sample', 'campaign'), sep='-')
# merge with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('sample', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
z <- merge(y1, mound_SA, by = "sample" )
z$totalCH4flux <- z$mean_fluxCH4 * z$working_sa_m2
z$totalCO2flux <- z$mean_fluxCO2 * z$working_sa_m2
z <- merge(z, species, by = "sample" )
# graph mound flux by mound size (use scaled flux - this is the actual flux being represented by the true size of the mound)
# methane
z$species <- ifelse(z$ID_cleaned == "Ami", "A. laurensis", "")
z$species <- ifelse(z$ID_cleaned == "Nasuti", "N. magnus",z$species )
z$species <- ifelse(z$ID_cleaned == "Copto", "C. acinaciformis", z$species)
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
summary(lm(log(totalCH4flux) ~  working_sa_m2, data = z[z$ID_cleaned == "Nasuti",]))
# carbon dioxide
ggplot(data =  z[z$ID_cleaned == "Ami",], aes(x = working_sa_m2, y = totalCO2flux, color = campaign)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("Total mound CO2 flux umol/d/mound") +
xlab("mound surface area")
# methane:carbon dioxide
ggplot(data = z[z$ID_cleaned == "Nasuti",], aes(x = working_sa_m2, y = mean_fluxCH4CO2, color = campaign)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("Total mound CH4:CO2") +
xlab("mound surface area")
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
install.packages("ggpmisc")
library(ggpmisc)
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
stat_poly_line() +
stat_poly_eq() +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "adj.R2", "f", "p", "n"))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "adj.R2", "f", "p", "n"))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species, ncol = 3)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
stat_poly_line() +
stat_poly_eq(use_label(c("adj.R2", "f", "p", "n"))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species, ncol = 3)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
stat_poly_line() +
stat_poly_eq(use_label(c("adj.R2", "f", "p", "n"))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
stat_poly_line() +
stat_poly_eq(use_label(c("adj.R2", "f", "p", "n"))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
# facet_wrap(~species, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux, color = species))) +
stat_poly_line() +
stat_poly_eq(use_label(c("adj.R2", "f", "p", "n"))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
# facet_wrap(~species, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
stat_poly_line() +
stat_poly_eq(use_label(c("adj.R2", "f", "p", "n"))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
stat_poly_line() +
stat_poly_eq(use_label(c("adj.R2", "f", "p"))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = mound_average[!mound_average$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = ID_cleaned)) +
geom_boxplot()+
stat_compare_means(method = "anova")+
scale_fill_brewer("Blues")+
ylab("CH4 flux (umol/d/m2)")+
xlab("")+
scale_x_discrete(labels= c("A. laurensis", "C. acinaciformis", "N.magnus"))+
theme_classic()+
theme(legend.position="none")
aov.mound_average <- aov(mean_fluxCH4 ~ ID_cleaned, data = mound_average[!mound_average$ID_cleaned =="Macro",])
summary(aov.mound_average)
TukeyHSD(aov.mound_average, conf.level=.95)
ggplot(data = mound_average[!mound_average$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = ID_cleaned)) +
geom_boxplot()+
stat_compare_means()+
scale_fill_brewer("Blues")+
ylab("CH4 flux (umol/d/m2)")+
xlab("")+
scale_x_discrete(labels= c("A. laurensis", "C. acinaciformis", "N.magnus"))+
theme_classic()+
theme(legend.position="none")
ggplot(data = mound_average[!mound_average$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = ID_cleaned)) +
geom_boxplot()+
stat_compare_means(method = "anova")+
scale_fill_brewer("Blues")+
ylab("CH4 flux (umol/d/m2)")+
xlab("")+
scale_x_discrete(labels= c("A. laurensis", "C. acinaciformis", "N.magnus"))+
theme_classic()+
theme(legend.position="none")
hist(mound_average[!mound_average$ID_cleaned =="Macro",]$mean_fluxCH4)
TukeyHSD(aov.mound_average, conf.level=.95)
library(ggplot2)
library(dplyr)
library(ggpubr)
mounds <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
mounds <- mounds[,-1]
# remove entries without species ID
mounds[mounds==""] <- NA
mounds <- mounds[!is.na(mounds$ID_cleaned),]
# remove mounds that have fewer than 4 measurement positions per mound
measure_number <- data.frame(table(mounds$sample))
measure_number <- subset(measure_number, Freq>3)
measure_number <- as.vector(measure_number$Var1)
mounds <- mounds[mounds$sample %in% measure_number,]
# one way ANOVA
aov.1 <- aov(flux.CH4 ~ ID_cleaned, data = mounds) # note experimental switch out of CH4 flux with CH4:CO2
summary(aov.1)
TukeyHSD(aov.1)
# assumptions
par(mfrow=c(2,2))
plot(aov.1)
par(mfrow=c(1,1))
mound1 <- mounds[mounds$sample == c('MD1'),]
aov.2 <- aov(flux.CH4 ~ position, data = mound1) # note experimental switch out of CH4 flux with CH4:CO2
summary(aov.2)
# find a way to loop through each mound number and calculate anova table?
avgflux <- aggregate(mounds$flux.CH4, list(mounds$sample), FUN=mean)
y <- mounds[, c("sample",  "ID_cleaned")]
avgflux <- left_join(avgflux, y, by = c("Group.1"="sample"))
avgflux <- unique(avgflux)
# average methane flux by species
ggplot(data = avgflux, aes(x = as.factor(ID_cleaned), y = x)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# anova on mound averages between species
aov.3 <- aov(x ~ ID_cleaned, data = avgflux)
summary(aov.3)
TukeyHSD(aov.3)
# pick out top 4 highest methane fluxes by species
# (there is overlap between high and low of amitermes therefore shift from 5 to 4)
top <- avgflux %>%
arrange(desc(x)) %>%
group_by(ID_cleaned) %>%
slice(1:4)
top$rank <- "top"
top
# pick out bottom 4 lowest methane fluxes by species
bottom <- avgflux %>%
arrange(x) %>%
group_by(ID_cleaned) %>%
slice(1:4)
bottom$rank <- "bottom"
bottom
# remove entries without species info, clean up df
q1 <- rbind(top, bottom)
q1 <- q1 %>%
rename(sample = Group.1,
avg_flux = x)
# now take these IDs and show boxplots to see distribution of fluxes (not just average)
# join df
q1_all <- left_join(q1, mounds, by = "sample")
# plot for all
ggplot(data = q1_all, aes(x = sample, y = flux.CH4, color =  as.factor(rank), fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="YlOrRd")
# bar graph grouped by species - colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -avg_flux), y = avg_flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
q1_all$species <- ifelse(q1_all$ID_cleaned.x == "Ami", "A. laurensis", "")
q1_all$species <- ifelse(q1_all$ID_cleaned.x == "Nasuti", "N. magnus",q1_all$species )
q1_all$species <- ifelse(q1_all$ID_cleaned.x == "Copto", "C. acinaciformis", q1_all$species)
# plot for high values
q1H <- q1_all[q1_all$rank == c('top'),]
q1Hplot <- ggplot(data = q1H, aes(x = sample, y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme( legend.position = "none")+
facet_grid(~ as.factor(species),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with highest average CH4 flux")
# plot for low values
q1L <- q1_all[q1_all$rank == c('bottom'),]
q1Lplot <- ggplot(data = q1L, aes(x = sample, y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+\
theme(legend.position = "none")+
facet_grid(~ as.factor(species),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with lowest average CH4 flux")
# overall sampling for Q1
ggarrange(q1Hplot, q1Lplot, ncol = 1)
# export .csv with q1 mounds
# write.csv(q1, "/Users/abbeyyatsko/Downloads/q1.csv")
View(q1_all)
# just looking at one species
# plot for low values
q1_ami <- q1_all[q1_all$ID_cleaned.x == c('ami'),]
View(q1_ami)
# just looking at one species
# plot for low values
q1_ami <- q1_all[q1_all$ID_cleaned.x == c('Ami'),]
View(q1_ami)
ggplot(data = q1_ami, aes(x = sample, y = flux.CH4, fill = rank)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+\
theme(legend.position = "none")
q1Lplot <- ggplot(data = q1_ami, aes(x = sample, y = flux.CH4, fill = rank)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
scale_fill_brewer(palette="Blues")
q1Lplot
q1Lplot <- ggplot(data = q1_ami, aes(x = sample, y = flux.CH4, fill = rank)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
scale_x_discrete(labels = c("MD37",
, "MD10", "MD47", "MD45", "MD42", "MD23", "MD24"))
q1Lplot <- ggplot(data = q1_ami, aes(x = sample, y = flux.CH4, fill = rank)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
scale_x_discrete(labels = c("MD37", "MD54", "MD10", "MD47", "MD45", "MD42", "MD23", "MD24"))
q1Lplot
ggplot(data = q1_ami, aes(x = sample, y = flux.CH4, fill = rank)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
scale_x_discrete(labels = c("MD37", "MD54", "MD10", "MD47", "MD45", "MD42", "MD23", "MD24"))+
theme_classic()+
scale_fill_brewer(palette="Blues")
q1Lplot <- ggplot(data = q1_ami, aes(x = sample, y = flux.CH4, fill = rank)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
scale_x_discrete(limits = c("MD37", "MD54", "MD10", "MD47", "MD45", "MD42", "MD23", "MD24"))+
theme_classic()+
scale_fill_brewer(palette="Blues")
q1Lplot
# calculate min and max flux for each sample
data_min <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(min = min))
data_max <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(max = max))
minmax <- merge(data_max, data_min, by="sample")
minmax$range <- minmax$max - minmax$min
# merge in species info
minmax <- left_join(minmax, y, by = "sample")
minmax <- unique(minmax)
# range in intermound methane production by sample
ggplot(data = minmax, aes(x = as.factor(ID_cleaned), y = range)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# choose 5 most variable mounds (greatest range)
q2 <- minmax %>%
arrange(desc(range)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
# boxplot of individual mounds
q2_samps <- as.vector(q2$sample)
q2_samps <- mounds[ mounds$sample %in% q2_samps, ]
unique(q2_samps$sample)
q2_samps$species <- ifelse(q2_samps$ID_cleaned == "Ami", "A. laurensis", "")
q2_samps$species <- ifelse(q2_samps$ID_cleaned == "Nasuti", "N. magnus",q2_samps$species )
q2_samps$species <- ifelse(q2_samps$ID_cleaned == "Copto", "C. acinaciformis", q2_samps$species)
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(species),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme( legend.position = "none")+
scale_fill_brewer(palette="Blues")

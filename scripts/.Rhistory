scale_x_discrete(guide = guide_axis(angle = 90)) +
facet_wrap(~ID_cleaned)+
ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
ylim(0,18000)+
theme_light()+
theme(axis.text.x = element_text(size = 5))
# plot for flux by time of day - may
g1 <- ggplot(data = maymounds, aes(x = realtime, y = flux.CH4)) +
geom_boxplot()+
geom_jitter(aes(col=avg_respT))+
scale_color_distiller(palette = "RdYl")+
scale_x_discrete(guide = guide_axis(angle = 90)) +
facet_wrap(~ID_cleaned)+
ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
ylim(0,18000)+
theme_light()+
theme(axis.text.x = element_text(size = 5))
ggplot(data = maymounds, aes(x = realtime, y = flux.CH4)) +
geom_boxplot()+
geom_jitter(aes(col=avg_respT))+
scale_color_distiller(palette = "RdYl")+
scale_x_discrete(guide = guide_axis(angle = 90)) +
facet_wrap(~ID_cleaned)+
ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
ylim(0,18000)+
theme_light()+
theme(axis.text.x = element_text(size = 5))
ggplot(data = maymounds, aes(x = realtime, y = flux.CH4)) +
geom_boxplot()+
geom_jitter(aes(col=avg_respT))+
scale_color_distiller(palette = "Spectral")+
scale_x_discrete(guide = guide_axis(angle = 90)) +
facet_wrap(~ID_cleaned)+
ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
ylim(0,18000)+
theme_light()+
theme(axis.text.x = element_text(size = 5))
ggplot(data = novmounds, aes(x = realtime, y = flux.CH4)) +
geom_boxplot()+
geom_jitter(aes(col=avg_respT))+
scale_color_distiller(palette = "Spectral")+
facet_wrap(~ID_cleaned)+
ylab("CH4 flux umol/d/m2")+
scale_x_discrete(limits=c("8:36:45", "8:52:40", "9:13:40", "9:30:10", "9:36:40", "10:07:00", "10:24:30",
"10:58:00", "11:40:40", "11:43:30", "12:02:15", "12:16:00", "13:32:15", "13:50:30",
"13:52:00", "14:08:30", "14:22:30", "14:31:00", "14:47:00", "14:51:00", "14:57:15",
"15:34:15", "15:55:40", "16:23:00"), guide = guide_axis(angle = 90)) +
guides(fill=guide_legend(title="Species"))+
ylim(0,18000)+
theme_light()
y <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_flux=mean(flux.CH4))
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_flux=mean(flux.CH4))
View(mounds_ID)
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y <- mounds_ID %>% group_by(campaign) %>%
summarise(mean_flux=mean(flux.CH4))
y <- separate(y, col=campaign, into=c('sample', 'campaign'), sep='-')
View(y)
y <- mounds_ID %>% group_by(campaign) %>%
summarise(mean_flux=mean(flux.CH4))
y <- separate(y, col=campaign, into=c('sample', 'campaign'), sep='-')
# average temperature by mound via campaign
mounds_ID$mound_campaign <- paste(mounds_ID$sample,mounds_ID$campaign, sep = "-")
x <- aggregate(mounds_ID$avg_respT, list(mounds_ID$mound_campaign), FUN=mean)
colnames(x)[1] = "mound_campaign"
colnames(x)[2] = "mound_temp"
mounds_ID <- merge(mounds_ID, x, by = c("mound_campaign"))
str(mounds_ID)
mounds_ID$campaign <- as.factor(mounds_ID$campaign)
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_flux=mean(flux.CH4))
y <- separate(y, col=mound_campaign, into=c('sample', 'campaign'), sep='-')
# merge with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('sample', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
z <- merge(y, mound_SA, by = "sample" )
z$SA_scaled_flux <- z$mean_flux * z$working_sa_m2
z <- merge(z, species, by = "sample" )
View(z)
# graph mound flux by mound size (use scaled flux - this is the actual flux being represented by the true size of the mound)
ggplot(data = z, aes(x = working_sa_m2, y = SA_scaled_flux)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("CH4 flux umol/d/m2 scaled to mound size") +
xlab("mound surface area")
# graph mound flux by mound size (use scaled flux - this is the actual flux being represented by the true size of the mound)
ggplot(data = z, aes(x = working_sa_m2, y = SA_scaled_flux, color = campaign)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("CH4 flux umol/d/m2 scaled to mound size") +
xlab("mound surface area")
View(x)
View(mounds_ID)
View(y)
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y1 <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_fluxCH4=mean(flux.CH4))%>%
summarise(mean_fluxCO2=mean(flux.CO2_umol))%>%
summarise(mean_fluxCH4CO2=mean(ch4_co2))
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y1 <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_fluxCH4=mean(flux.CH4),mean_fluxCO2=mean(flux.CO2_umol), mean_fluxCH4CO2=mean(ch4_co2) )
View(y1)
y1 <- separate(y1, col=mound_campaign, into=c('sample', 'campaign'), sep='-')
# merge with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('sample', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
z <- merge(y1, mound_SA, by = "sample" )
z$SA_scaled_flux <- z$mean_flux * z$working_sa_m2
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('sample', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
z <- merge(y1, mound_SA, by = "sample" )
z$SA_scaled_flux <- z$mean_flux * z$working_sa_m2
# graph mound flux by mound size (use scaled flux - this is the actual flux being represented by the true size of the mound)
ggplot(data = z, aes(x = working_sa_m2, y = SA_scaled_flux, color = campaign)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("Total mound CH4 flux umol/d/m2") +
xlab("mound surface area")
# merge with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('sample', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
z <- merge(y1, mound_SA, by = "sample" )
z$totalCH4flux <- z$mean_fluxCH4 * z$working_sa_m2
z$totalCO2flux <- z$mean_fluxCO2 * z$working_sa_m2
z <- merge(z, species, by = "sample" )
# graph mound flux by mound size (use scaled flux - this is the actual flux being represented by the true size of the mound)
ggplot(data = z, aes(x = working_sa_m2, y = totalCH4flux, color = campaign)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("Total mound CH4 flux umol/d/m2") +
xlab("mound surface area")
# carbon dioxide
ggplot(data = z, aes(x = working_sa_m2, y = totalCO2flux, color = campaign)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("Total mound CO2 flux umol/d/m2") +
xlab("mound surface area")
# methane:carbon dioxide
ggplot(data = z, aes(x = working_sa_m2, y = mean_fluxCH4CO2, color = campaign)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("Total mound CH4 flux umol/d/m2") +
xlab("mound surface area")
# methane:carbon dioxide
ggplot(data = z, aes(x = working_sa_m2, y = mean_fluxCH4CO2)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("Total mound CH4 flux umol/d/m2") +
xlab("mound surface area")
# methane:carbon dioxide
ggplot(data = z, aes(x = working_sa_m2, y = mean_fluxCH4CO2, color = campaign)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("Total mound CH4:CO2") +
xlab("mound surface area")
library(ggplot2)
library(dplyr)
library(ggpubr)
mounds <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
mounds <- mounds[,-1]
# remove entries without species ID
mounds[mounds==""] <- NA
mounds <- mounds[!is.na(mounds$ID_cleaned),]
# remove mounds that have fewer than 4 measurement positions per mound
measure_number <- data.frame(table(mounds$sample))
measure_number <- subset(measure_number, Freq>3)
measure_number <- as.vector(measure_number$Var1)
mounds <- mounds[mounds$sample %in% measure_number,]
View(mounds)
avgflux <- aggregate(mounds$flux.CH4, list(mounds$sample), FUN=mean)
y <- mounds[, c("sample",  "ID_cleaned")]
avgflux <- left_join(avgflux, y, by = c("Group.1"="sample"))
avgflux <- unique(avgflux)
# average methane flux by species
ggplot(data = avgflux, aes(x = as.factor(ID_cleaned), y = x)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# pick out top 4 highest methane fluxes by species
# (there is overlap between high and low of amitermes therefore shift from 5 to 4)
top <- avgflux %>%
arrange(desc(x)) %>%
group_by(ID_cleaned) %>%
slice(1:4)
top$rank <- "top"
top
# pick out bottom 4 lowest methane fluxes by species
bottom <- avgflux %>%
arrange(x) %>%
group_by(ID_cleaned) %>%
slice(1:4)
bottom$rank <- "bottom"
bottom
# remove entries without species info, clean up df
q1 <- rbind(top, bottom)
q1 <- q1 %>%
rename(sample = Group.1,
avg_flux = x)
# now take these IDs and show boxplots to see distribution of fluxes (not just average)
# join df
q1_all <- left_join(q1, mounds, by = "sample")
# plot for all
ggplot(data = q1_all, aes(x = sample, y = flux.CH4, color =  as.factor(rank), fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="YlOrRd")
# plot for high values
q1H <- q1_all[q1_all$rank == c('top'),]
q1Hplot <- ggplot(data = q1H, aes(x = sample, y = flux.CH4, fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="YlOrRd")+
ggtitle("mounds w highest average flux")
# plot for low values
q1L <- q1_all[q1_all$rank == c('bottom'),]
q1Lplot <- ggplot(data = q1L, aes(x = sample, y = flux.CH4, fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="YlOrRd")+
ggtitle("mounds w lowest average flux")
ggarrange(q1Hplot, q1Lplot, ncol = 1)
q1Lplot <- ggplot(data = q1L, aes(x = sample, y = flux.CH4, fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="YlOrRd")+
ggtitle("mounds w lowest average flux")
q1Lplot
q1Hplot <- ggplot(data = q1H, aes(x = sample, y = flux.CH4, fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="YlOrRd")+
ggtitle("mounds w highest average flux")
ggarrange(q1Hplot, q1Lplot, ncol = 1)
# calculate min and max flux for each sample
data_min <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(min = min))
data_max <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(max = max))
minmax <- merge(data_max, data_min, by="sample")
minmax$range <- minmax$max - minmax$min
# merge in species info
minmax <- left_join(minmax, y, by = "sample")
minmax <- unique(minmax)
# range in intermound methane production by sample
ggplot(data = minmax, aes(x = as.factor(ID_cleaned), y = range)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# choose 5 most variable mounds (greatest range)
q2 <- minmax %>%
arrange(desc(range)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -avg_flux), y = avg_flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# boxplot of individual mounds
q2_samps <- as.vector(q2$sample)
q2_samps <- mounds[ mounds$sample %in% q2_samps, ]
unique(q2_samps$sample)
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
# see the overlap of samples in q1 and q2
matches <- inner_join(q1, q2,
c("sample" = "sample"))
matches
View(matches)
# range in intermound methane production by sample
ggplot(data = minmax, aes(x = as.factor(ID_cleaned), y = range)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -avg_flux), y = avg_flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# boxplot of individual mounds
q2_samps <- as.vector(q2$sample)
q2_samps <- mounds[ mounds$sample %in% q2_samps, ]
unique(q2_samps$sample)
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
# plot for all
ggplot(data = q1_all, aes(x = sample, y = flux.CH4, color =  as.factor(rank), fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="YlOrRd")
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -avg_flux), y = avg_flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# calculate min and max flux for each sample
data_min <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(min = min))
data_max <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(max = max))
minmax <- merge(data_max, data_min, by="sample")
minmax$range <- minmax$max - minmax$min
# merge in species info
minmax <- left_join(minmax, y, by = "sample")
minmax <- unique(minmax)
# range in intermound methane production by sample
ggplot(data = minmax, aes(x = as.factor(ID_cleaned), y = range)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# choose 5 most variable mounds (greatest range)
q2 <- minmax %>%
arrange(desc(range)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
View(q2)
# boxplot of individual mounds
q2_samps <- as.vector(q2$sample)
q2_samps <- mounds[ mounds$sample %in% q2_samps, ]
unique(q2_samps$sample)
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
View(q2_samps)
View(q2)
View(q1)
# see the overlap of samples in q1 and q2
matches <- inner_join(q1, q2,
c("sample" = "sample"))
matches
View(matches)
# q1: choose 3 samples on each mound closest to average flux
# create unique extract_ID that includes mound number, tag, and position of measurement
q1_samps <- q1_all
q1_samps$tag <- as.factor(q1_samps$tag)
q1_samps$extract_ID <- paste(q1_samps$sample,"-",q1_samps$tag, "-", q1_samps$position, sep = "")
q1_samps <- q1_samps %>% relocate(extract_ID, .after = sample)
# choose 3 samples per mound that are closest to the average
# make column for difference from median in order to sort out easier
q1_samps$avg_dif <- abs(q1_samps$avg_flux - q1_samps$flux.CH4)
q1_samps <- q1_samps %>% relocate(avg_dif, .after = avg_flux)
# choose the largest average difference grouped by sample
q1_samps %>% group_by(sample) %>% top_n(1, avg_dif) -> a
a <- as.vector(a$extract_ID)
q1_samps <- q1_samps[!q1_samps$extract_ID %in% a,]
# subset out by species
q1_samps_ami <- subset(q1_samps, ID_cleaned.x == "Ami")
q1_samps_copto <- subset(q1_samps, ID_cleaned.x == "Copto")
q1_samps_nasuti <- subset(q1_samps, ID_cleaned.x == "Nasuti")
# get rid of highest again for copto and nasuti (they have 5 measurements per mound usually, need to rid of an additional)
q1_samps_copto %>% group_by(sample) %>% top_n(1, avg_dif) -> copto_rm
copto_rm <- as.vector(copto_rm$extract_ID)
q1_samps_copto <- q1_samps_copto[!q1_samps_copto$extract_ID %in% copto_rm,]
q1_samps_nasuti %>% group_by(sample) %>% top_n(1, avg_dif) -> nasuti_rm
nasuti_rm <- as.vector(nasuti_rm$extract_ID)
q1_samps_nasuti <- q1_samps_nasuti[!q1_samps_nasuti$extract_ID %in% nasuti_rm,]
# bring species back together
q1_samps <- rbind(q1_samps_ami, q1_samps_copto, q1_samps_nasuti)
View(q1_samps)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(viridis)
library(tidyr)
library(broom)
library(purrr)
library(tidyverse)
CO2_fluxfinal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CO2_fluxfinal_all.csv")
CH4_fluxfinal<- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinal_all.csv")

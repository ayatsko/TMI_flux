ylim(0,50)+ # for outliers
theme_light()
ggarrange(c1, c2, ncol = 1)
# mounds
c1 <- ggplot(data = mounds_ID, aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = position)) +
geom_boxplot()+
facet_wrap(~campaign, scales = "free_x")+
ylab("CH4 flux umol/d/m2")+
scale_fill_brewer("Blues")+
theme_light()
c1
c1 <- ggplot(data = mounds_ID, aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = position)) +
geom_boxplot()+
facet_wrap(~campaign, scales = "free_x")+
ylab("CH4 flux umol/d/m2")+
scale_fill_brewer("Blues")+
theme_light()
c2 <- ggplot(data = mounds_ID, aes(x = as.factor(ID_cleaned), y = ch4_co2, fill = position)) +
geom_boxplot()+
facet_wrap(~campaign, scales = "free_x")+
ylab("CH4:CO2")+
scale_fill_brewer("Blues")+
ylim(0,50)+ # for outliers
theme_light()
ggarrange(c1, c2, ncol = 1)
# soils
c3 <- ggplot(data = soils, aes(x = as.factor(position), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
c3
# soils
c3 <- ggplot(data = soils, aes(x = as.factor(position), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
scale_fill_brewer("Blues")+
theme_light()
c3
# soils (shows decreasing as you move from the mound, but all together insignificant flux)
c3 <- ggplot(data = soils, aes(x = as.factor(position), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
facet_wrap(~campaign, scales = "free_x")+
ylab("CH4 flux umol/d/m2")+
scale_fill_brewer("Blues")+
theme_light()
c3
d1 <- ggplot(data = mounds_ID, aes(x = as.factor(directon), y = flux.CH4, fill = flux_source)) +
geom_boxplot()+
facet_wrap(~campaign, scales = "free_x")+
ylab("CH4 flux umol/d/m2")+
theme_light()
d2 <- ggplot(data = mounds_ID, aes(x = as.factor(directon), y = ch4_co2, fill = flux_source)) +
geom_boxplot()+
facet_wrap(~campaign, scales = "free_x")+
theme_light()
ggarrange(d1, d2, ncol = 1)
d1 <- ggplot(data = mounds_ID, aes(x = as.factor(directon), y = flux.CH4)) +
geom_boxplot()+
facet_wrap(~campaign, scales = "free_x")+
ylab("CH4 flux umol/d/m2")+
theme_light()
d2 <- ggplot(data = mounds_ID, aes(x = as.factor(directon), y = ch4_co2)) +
geom_boxplot()+
facet_wrap(~campaign, scales = "free_x")+
theme_light()
ggarrange(d1, d2, ncol = 1)
# plus by species
d3 <- ggplot(data = mounds_ID, aes(x = ID_cleaned, y = flux.CH4, fill = as.factor(directon))) +
geom_boxplot()+
facet_wrap(~campaign, scales = "free_x")+
ylab("CH4 flux umol/d/m2")+
theme_light()
d4 <- ggplot(data = mounds_ID, aes(x = ID_cleaned, y = flux.CH4, fill = as.factor(directon))) +
geom_boxplot()+
facet_wrap(~campaign, scales = "free_x")+
theme_light()
ggarrange(d3, d4, ncol = 1)
ggarrange(d1, d2, ncol = 1)
e <- ggplot(data = mounds_ID, aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
e
e <- ggplot(data = mounds_ID, aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
theme_light()
e
# co2:ch4 ratio
f <- ggplot(data = mounds_ID, aes(x = as.factor(ID_cleaned), y = ch4_co2, fill = campaign)) +
geom_boxplot()+
theme_light()+
scale_fill_brewer("Blues")+
scale_y_continuous(limits = c(-1, 50))
ggarrange(e, f, ncol = 1)
# merge in real time data from GPS records of mound being tagged (this is an overall mound estimate for the may campaign mounds)
maytime <- read.csv("/Users/abbeyyatsko/Downloads/mound_gps (1).csv")
maytime <- maytime[c("name", "realtime")]
names(maytime)[1] <- 'sample'
maymounds <- mounds[mounds$campaign == "may22",]
novmounds <- mounds[mounds$campaign == "nov22",]
maymounds <- merge(maymounds, maytime, by = c("sample"))
maymounds <- maymounds %>% relocate(realtime, .after = Time_start)
novtime <- read.csv("/Users/abbeyyatsko/Downloads/novtimes.csv")
names(novtime)[2] <- 'realtime'
novmounds <- merge(novmounds, novtime, by = c("sample"))
novmounds <- novmounds %>% relocate(realtime, .after = Time_start)
# plot for flux by time of day - may
g1 <- ggplot(data = maymounds, aes(x = realtime, y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
scale_x_discrete(guide = guide_axis(angle = 90)) +
theme_light()
# plot for flux by time of day - nov
g2 <- ggplot(data = novmounds, aes(x = realtime, y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
scale_x_discrete(limits=c("8:36:45", "8:52:40", "9:13:40", "9:30:10", "9:36:40", "10:07:00", "10:24:30",
"10:58:00", "11:40:40", "11:43:30", "12:02:15", "12:16:00", "13:32:15", "13:50:30",
"13:52:00", "14:08:30", "14:22:30", "14:31:00", "14:47:00", "14:51:00", "14:57:15",
"15:34:15", "15:55:40", "16:23:00"), guide = guide_axis(angle = 90)) +
theme_light()
# # scatter plot for flux by time of day (for soils)
# g3 <- ggplot(data = soils, aes(x = as.factor(realtime), y = flux.CH4, fill = ID_cleaned)) +
#   geom_boxplot()+
#   ylab("CH4 flux umol/d/m2")+
#   scale_x_discrete(guide = guide_axis(angle = 90)) +
#   theme_light()
ggarrange(g1, g2, ncol = 1)
# using radial graph for mounds
# g4 <- ggplot(data = moundsCO2, aes(x = as.factor(realtime), y = flux.CH4, fill = ID_cleaned)) +
#   geom_boxplot()+
#   ylab("CH4 flux umol/d/m2")+
#   scale_y_continuous(limits = c(-1, 15000))+
#   theme_light()+
#   coord_polar()
# plot for flux by time of day - nov
g2 <- ggplot(data = novmounds, aes(x = realtime, y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
scale_fill_brewer("Blues")+
scale_x_discrete(limits=c("8:36:45", "8:52:40", "9:13:40", "9:30:10", "9:36:40", "10:07:00", "10:24:30",
"10:58:00", "11:40:40", "11:43:30", "12:02:15", "12:16:00", "13:32:15", "13:50:30",
"13:52:00", "14:08:30", "14:22:30", "14:31:00", "14:47:00", "14:51:00", "14:57:15",
"15:34:15", "15:55:40", "16:23:00"), guide = guide_axis(angle = 90)) +
theme_light()
# plot for flux by time of day - may
g1 <- ggplot(data = maymounds, aes(x = realtime, y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
scale_fill_brewer("Blues")+
scale_x_discrete(guide = guide_axis(angle = 90)) +
theme_light()
ggarrange(g1, g2, ncol = 1)
h1
h2
# new df with sample, ch4 and co2
reg <- merge(CH4_fluxfinal, CO2_fluxfinal, by = c("Time_start"))
reg <- reg[, c("Time_start", "flux.CH4", "flux.CO2", "flux.CO2_umol", "flux_source.x", "ID_cleaned.x", "avg_respT.x" )]
str(reg)
reg_mounds <- reg[reg$flux_source.x == 'm',]
reg_soils <- reg[reg$flux_source.x == 's',]
i1 <- ggplot(data = reg, aes(x = flux.CH4, y = flux.CO2_umol, color = ID_cleaned.x)) +
geom_point(alpha=0.5)+
xlab("CH4 flux umol/d/m2")+
ylab("CO2 flux umol/d/m2")+
geom_smooth()+
labs(title = "mound+soil")+
theme_light()
i2 <- ggplot(data = reg_mounds, aes(x =log(flux.CO2_umol) , y =log(flux.CH4), color = ID_cleaned.x)) +
geom_point(alpha=0.5)+
ylab("CH4 flux umol/d/m2")+
xlab("CO2 flux umol/d/m2")+
geom_smooth()+
labs(title = "mound")+
theme_light()
i3 <- ggplot(data = reg_soils, aes(x = flux.CH4, y = flux.CO2_umol, color = ID_cleaned.x)) +
geom_point(alpha=0.5)+
xlab("CH4 flux umol/d/m2")+
ylab("CO2 flux umol/d/m2")+
geom_smooth()+
labs(title = "soil")+
theme_light()
ggarrange(i1, i2, i3)
i2
i3
ggarrange(i1, i2, i3)
i1 <- ggplot(data = reg, aes(x = flux.CH4, y = flux.CO2_umol, color = ID_cleaned.x)) +
geom_point(alpha=0.5)+
xlab("CH4 flux umol/d/m2")+
ylab("CO2 flux umol/d/m2")+
geom_smooth(method = 'lm')+
labs(title = "mound+soil")+
theme_light()
i2 <- ggplot(data = reg_mounds, aes(x =log(flux.CO2_umol) , y =log(flux.CH4), color = ID_cleaned.x)) +
geom_point(alpha=0.5)+
ylab("CH4 flux umol/d/m2")+
xlab("CO2 flux umol/d/m2")+
geom_smooth(method = 'lm')+
labs(title = "mound")+
theme_light()
i3 <- ggplot(data = reg_soils, aes(x = flux.CH4, y = flux.CO2_umol, color = ID_cleaned.x)) +
geom_point(alpha=0.5)+
xlab("CH4 flux umol/d/m2")+
ylab("CO2 flux umol/d/m2")+
geom_smooth(method = 'lm')+
labs(title = "soil")+
theme_light()
ggarrange(i1, i2, i3)
i3
# average fluxes - may
ami <- maymounds[maymounds$ID_cleaned == 'Ami',]
avgflux_ami <- mean(ami$flux.CH4) # 3160 umol/m2*d
View(ami)
View(maymounds)
# average fluxes - may
ami <- maymounds[maymounds$ID_cleaned == 'Ami',]
View(ami)
# average fluxes - may
# remove NAs
maymounds[!is.na(maymounds$ID_cleaned|maymounds$ID_cleaned.x|maymounds$ID_cleaned.y),]
maymounds <- mounds[mounds$campaign == "may22",]
novmounds <- mounds[mounds$campaign == "nov22",]
View(mounds)
maytime <- read.csv("/Users/abbeyyatsko/Downloads/mound_gps (1).csv")
maytime <- maytime[c("name", "realtime")]
names(maytime)[1] <- 'sample'
maymounds <- mounds[mounds$campaign == "may22",]
novmounds <- mounds[mounds$campaign == "nov22",]
maymounds <- merge(maymounds, maytime, by = c("sample"))
maymounds <- maymounds %>% relocate(realtime, .after = Time_start)
novtime <- read.csv("/Users/abbeyyatsko/Downloads/novtimes.csv")
names(novtime)[2] <- 'realtime'
novmounds <- merge(novmounds, novtime, by = c("sample"))
novmounds <- novmounds %>% relocate(realtime, .after = Time_start)
View(maymounds)
# remove duplicate ID columns
maymounds[!c("ID_cleaned.x", "ID_cleaned.y")]
# remove duplicate ID columns
maymounds <- subset( maymounds, select = -c(ID_cleaned.x, ID_cleaned.y) )
novmounds <- subset( novmounds, select = -c(ID_cleaned.x, ID_cleaned.y) )
View(maymounds)
# average fluxes - may
# remove NAs
maymounds[!is.na(maymounds$ID_cleaned),]
# average fluxes - may
# remove NAs
maymounds_ID <- maymounds[!is.na(maymounds$ID_cleaned),]
x <- maymounds_ID %>% group_by(ID_cleaned) %>%
summarise(mean_flux=mean(flux.CH4),
.groups = 'drop')
View(x)
View(novmounds)
# average fluxes - nov
nov_avg <- novmounds %>% group_by(ID_cleaned) %>%
summarise(mean_flux=mean(flux.CH4),
.groups = 'drop')
View(nov_avg)
may_avg <- maymounds_ID %>% group_by(ID_cleaned) %>%
summarise(mean_flux=mean(flux.CH4),
.groups = 'drop')
View(may_avg)
View(mounds_ID)
# merge mounds_ID with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1.csv")
View(mound_SA)
mound_SA <- mound_SA[, c('mound', 'working_SA_m2')]
mound_SA <- mound_SA[, c('mound', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
View(mounds_ID)
# remove duplicate ID columns
mounds_ID <- subset( mounds_ID, select = -c(ID_cleaned.x, ID_cleaned.y) )
View(mounds_ID)
View(mounds_ID)
# merge mounds_ID with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('mound', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
x <- merge(mound_SA, mounds_ID, by = c("sample"))
# merge mounds_ID with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('mound', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
mound_SA <- mound_SA[, c('sample', 'working_sa_m2')]
# merge mounds_ID with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('sample', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
x <- merge(mound_SA, mounds_ID, by = c("sample"))
View(x)
View(reg_mounds)
mounds_ID$mound_campaign <- paste(mounds_ID$sample,mounds_ID$campaign)
x <- aggregate(mounds_ID$avg_respT, list(mounds_ID$mound_campaign), FUN=mean)
colnames(x)[1] = "mound_campaign"
colnames(x)[2] = "mound_temp"
mounds_ID <- merge(mounds_ID, x, by = c("mound_campaign"))
str(mounds_ID)
mounds_ID$campaign <- as.factor(mounds_ID$campaign)
View(mounds_ID)
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_flux=mean(flux.CH4),
.groups = 'drop')
View(y)
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_flux=mean(flux.CH4),
.groups = 'keep')
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_flux=mean(flux.CH4),
.groups = 'keep')
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_flux=mean(flux.CH4))
View(y)
pivot_longer(y, cols = everything()) %>%
separate(value, into = c('alpha', 'beta'), sep = "\\0") %>%
select(-name)
library(tidyr)
pivot_longer(y, cols = everything()) %>%
separate(value, into = c('alpha', 'beta'), sep = "\\0") %>%
select(-name)
separate(y, col=mound_campaign, into=c('mound', 'campaign'), sep='')
y <- separate(y, col=mound_campaign, into=c('mound', 'campaign'), sep='')
# average temperature by mound via campaign
mounds_ID$mound_campaign <- paste(mounds_ID$sample,mounds_ID$campaign, sep = "")
View(mounds_ID)
# average temperature by mound via campaign
mounds_ID$mound_campaign <- paste(mounds_ID$sample,mounds_ID$campaign, sep = "-")
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_flux=mean(flux.CH4))
View(y)
y <- separate(y, col=mound_campaign, into=c('mound', 'campaign'), sep='-')
# merge with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('sample', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
View(mound_SA)
y <- separate(y, col=mound_campaign, into=c('sample', 'campaign'), sep='-')
# merge with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('sample', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
scaled_mounds <- merge(mound_SA, y, by = c("sample"))
dplyr::bind_rows(y,mound_SA)
merge(y, mound_SA, by = "sample" )
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_flux=mean(flux.CH4))
y <- separate(y, col=mound_campaign, into=c('sample', 'campaign'), sep='-')
merge(y, mound_SA, by = "sample" )
z <- merge(y, mound_SA, by = "sample" )
View(z)
z$SA_scaled_flux <- z$mean_flux * z$working_sa_m2
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = flux.CH4)) +
geom_point()+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2")+
labs(title = "mound")
View(species)
View(species)
z <- merge(z, species, by = "sample" )
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = flux.CH4)) +
geom_point()+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2")+
labs(title = "mound")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux)) +
geom_point()+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2")+
labs(title = "mound")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux)) +
geom_point()+
geom_line(method = lm)
geom_line(method = l"m)
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux)) +
geom_point()+
geom_line(method = "lm")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux)) +
geom_point()+
geom_line(method = "lm")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2")+
labs(title = "mound")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = SA_scaled_flux)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2")+
labs(title = "mound")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux) +
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux) +
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2")
w
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux)) +
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = SA_scaled_flux)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = SA_scaled_flux)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2 scaled to mound size")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = SA_scaled_flux)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
ylim(0,18000)+ # removes outliers, makes it easier to see comparisons
ylab("CH4 flux umol/d/m2 scaled to mound size") +
xlab("mound surface area")
View(z)
View(mound_SA)
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = SA_scaled_flux)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("CH4 flux umol/d/m2 scaled to mound size") +
xlab("mound surface area")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("CH4 flux umol/d/m2 scaled to mound size") +
xlab("mound surface area")
# graph mound flux by mound size
ggplot(data = z, aes(x = working_sa_m2, y = mean_flux)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("CH4 flux umol/d/m2 ") +
xlab("mound surface area")

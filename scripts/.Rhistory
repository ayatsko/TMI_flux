ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
View(z)
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~ID_cleaned, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = z[!z$species == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~ID_cleaned, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux))) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("Total mound CH4 flux (log scale, umol/d/mound)") +
xlab("Mound surface area (m2)")
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = avg_respT , y = flux.CH4)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "lm")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 5))
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = avg_respT , y = flux.CH4)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "lm")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 5)) +
xlab("Average mound surface temperature (C)")+
ylab("CH4 flux (umol/d/m2)")
# plot for flux by time of day - nov
ggplot(data = novmounds, aes(x = avg_respT, y = log(flux.CH4))) +
geom_point()+
geom_smooth(method = "lm")+
facet_wrap(~ID_cleaned, ncol =1)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 5))
summary(lm(flux.CH4 ~  avg_respT, data = novmounds[novmounds$ID_cleaned == "Ami",]))
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = avg_respT , y = flux.CH4)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "lm")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 5)) +
xlab("Average mound surface temperature (C)")+
ylab("CH4 flux (umol/d/m2)")
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = as.POSIXct(realtime) , y = avg_respT)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "lm")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 5)) +
xlab("Average mound surface temperature (C)")+
ylab("CH4 flux (umol/d/m2)")
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = as.POSIXct(realtime) , y = avg_respT)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "loess")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 5)) +
xlab("Average mound surface temperature (C)")+
ylab("CH4 flux (umol/d/m2)")
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = as.POSIXct(realtime) , y = avg_respT)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "loess")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 5)) +
xlab("Time of day")+
ylab("Avergae mound surface temperature (C)")
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = as.POSIXct(realtime) , y = avg_respT)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "loess")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 10)) +
xlab("Time of day")+
ylab("Avergae mound surface temperature (C)")
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = as.POSIXct(realtime) , y = avg_respT)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "loess")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 7)) +
xlab("Time of day")+
ylab("Avergae mound surface temperature (C)")
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = avg_respT , y = flux.CH4)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "lm")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 5)) +
xlab("Average mound surface temperature (C)")+
ylab("CH4 flux (umol/d/m2)")
# plot for flux by time of day - may
ggplot(data = rbind(maymounds, novmounds), aes(x = avg_respT , y = flux.CH4)) + # as.POSIXct(realtime)
geom_point()+
geom_smooth(method = "lm")+
#facet_wrap(~ID_cleaned)+
#ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
theme_classic() +
theme(axis.text.x = element_text(size = 7)) +
xlab("Average mound surface temperature (C)")+
ylab("CH4 flux (umol/d/m2)")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ggpubr)
mounds <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
mounds <- mounds[,-1]
# remove entries without species ID
mounds[mounds==""] <- NA
mounds <- mounds[!is.na(mounds$ID_cleaned),]
# remove mounds that have fewer than 4 measurement positions per mound
measure_number <- data.frame(table(mounds$sample))
measure_number <- subset(measure_number, Freq>3)
measure_number <- as.vector(measure_number$Var1)
mounds <- mounds[mounds$sample %in% measure_number,]
avgflux <- aggregate(mounds$flux.CH4, list(mounds$sample), FUN=mean)
y <- mounds[, c("sample",  "ID_cleaned")]
avgflux <- left_join(avgflux, y, by = c("Group.1"="sample"))
avgflux <- unique(avgflux)
# average methane flux by species
ggplot(data = avgflux, aes(x = as.factor(ID_cleaned), y = x)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# anova on mound averages between species
aov.3 <- aov(x ~ ID_cleaned, data = avgflux)
summary(aov.3)
TukeyHSD(aov.3)
# pick out top 4 highest methane fluxes by species
# (there is overlap between high and low of amitermes therefore shift from 5 to 4)
top <- avgflux %>%
arrange(desc(x)) %>%
group_by(ID_cleaned) %>%
slice(1:4)
top$rank <- "top"
top
# pick out bottom 4 lowest methane fluxes by species
bottom <- avgflux %>%
arrange(x) %>%
group_by(ID_cleaned) %>%
slice(1:4)
bottom$rank <- "bottom"
bottom
# remove entries without species info, clean up df
q1 <- rbind(top, bottom)
q1 <- q1 %>%
rename(sample = Group.1,
avg_flux = x)
# now take these IDs and show boxplots to see distribution of fluxes (not just average)
# join df
q1_all <- left_join(q1, mounds, by = "sample")
# plot for all
ggplot(data = q1_all, aes(x = sample, y = flux.CH4, color =  as.factor(rank), fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="YlOrRd")
# bar graph grouped by species - colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -avg_flux), y = avg_flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# plot for high values
q1H <- q1_all[q1_all$rank == c('top'),]
q1Hplot <- ggplot(data = q1H, aes(x = sample, y = flux.CH4, fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="YlOrRd")+
ggtitle("mounds w highest average flux")
# plot for low values
q1L <- q1_all[q1_all$rank == c('bottom'),]
q1Lplot <- ggplot(data = q1L, aes(x = sample, y = flux.CH4, fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="YlOrRd")+
ggtitle("mounds w lowest average flux")
# overall sampling for Q1
ggarrange(q1Hplot, q1Lplot, ncol = 1)
# export .csv with q1 mounds
# write.csv(q1, "/Users/abbeyyatsko/Downloads/q1.csv")
q1Hplot <- ggplot(data = q1H, aes(x = sample, y = flux.CH4, fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
theme( legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with highest average CH4 flux")
# plot for low values
q1L <- q1_all[q1_all$rank == c('bottom'),]
q1Lplot <- ggplot(data = q1L, aes(x = sample, y = flux.CH4, fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
theme_light()+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+\
theme(legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with lowest average CH4 flux")
# overall sampling for Q1
ggarrange(q1Hplot, q1Lplot, ncol = 1)
View(q1H)
View(q1_all)
q1_all$species <- ifelse(q1_all$ID_cleaned.x == "Ami", "A. laurensis", "")
q1_all$species <- ifelse(q1_all$ID_cleaned.x == "Nasuti", "N. magnus",q1_all$species )
q1_all$species <- ifelse(q1_all$ID_cleaned.x == "Copto", "C. acinaciformis", q1_all$species)
# plot for high values
q1H <- q1_all[q1_all$rank == c('top'),]
q1Hplot <- ggplot(data = q1H, aes(x = sample, y = flux.CH4, fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme( legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with highest average CH4 flux")
# plot for low values
q1L <- q1_all[q1_all$rank == c('bottom'),]
q1Lplot <- ggplot(data = q1L, aes(x = sample, y = flux.CH4, fill = ID_cleaned.x)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+\
theme(legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with lowest average CH4 flux")
# overall sampling for Q1
ggarrange(q1Hplot, q1Lplot, ncol = 1)
q1Hplot <- ggplot(data = q1H, aes(x = sample, y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme( legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with highest average CH4 flux")
# plot for low values
q1L <- q1_all[q1_all$rank == c('bottom'),]
q1Lplot <- ggplot(data = q1L, aes(x = sample, y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+\
theme(legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with lowest average CH4 flux")
# overall sampling for Q1
ggarrange(q1Hplot, q1Lplot, ncol = 1)
q1Hplot <- ggplot(data = q1H, aes(x = sample, y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme( legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with highest average CH4 flux")
q1Lplot <- ggplot(data = q1L, aes(x = sample, y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+\
theme(legend.position = "none")+
facet_grid(~ as.factor(ID_cleaned.x),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with lowest average CH4 flux")
# overall sampling for Q1
ggarrange(q1Hplot, q1Lplot, ncol = 1)
q1Hplot <- ggplot(data = q1H, aes(x = sample, y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme( legend.position = "none")+
facet_wrap(~ as.factor(species),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with highest average CH4 flux")
q1Hplot <- ggplot(data = q1H, aes(x = sample, y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme( legend.position = "none")+
facet_grid(~ as.factor(species),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with highest average CH4 flux")
q1Lplot <- ggplot(data = q1L, aes(x = sample, y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")+\
theme(legend.position = "none")+
facet_grid(~ as.factor(species),
scales = "free_x",
space = "free_x",
switch = "x")+
scale_fill_brewer(palette="Blues")+
ggtitle("Mounds with lowest average CH4 flux")
# overall sampling for Q1
ggarrange(q1Hplot, q1Lplot, ncol = 1)
# calculate min and max flux for each sample
data_min <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(min = min))
data_max <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(max = max))
minmax <- merge(data_max, data_min, by="sample")
minmax$range <- minmax$max - minmax$min
# merge in species info
minmax <- left_join(minmax, y, by = "sample")
minmax <- unique(minmax)
# range in intermound methane production by sample
ggplot(data = minmax, aes(x = as.factor(ID_cleaned), y = range)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# choose 5 most variable mounds (greatest range)
q2 <- minmax %>%
arrange(desc(range)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
# boxplot of individual mounds
q2_samps <- as.vector(q2$sample)
q2_samps <- mounds[ mounds$sample %in% q2_samps, ]
unique(q2_samps$sample)
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
# see the overlap of samples in q1 and q2
matches <- inner_join(q1, q2,
c("sample" = "sample"))
# export .csv with q2 mounds
# write.csv(q2, "/Users/abbeyyatsko/Downloads/q2.csv")
View(q2_samps)
q2_samps$species <- ifelse(q2_samps$ID_cleaned == "Ami", "A. laurensis", "")
q2_samps$species <- ifelse(q2_samps$ID_cleaned == "Nasuti", "N. magnus",q2_samps$species )
q2_samps$species <- ifelse(q2_samps$ID_cleaned == "Copto", "C. acinaciformis", q2_samps$species)
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(species),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(species),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme( legend.position = "none")
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = species)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(species),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme( legend.position = "none")+
scale_fill_brewer(palette="Blues")

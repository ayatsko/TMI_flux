# filter out mounds with fewer than 4 time points
seasonal_list <- resample_repeats[resample_repeats$repeats>3,]
seasonal_list <- seasonal_list$sample
seasonal_list
# filter out mounds with fewer than 4 time points
seasonal_list <- resample_repeats[resample_repeats$repeats>3,]
seasonal_list
all_fluxes_resample_reps <- all_fluxes_resample[all_fluxes_resample$sample %in% seasonal_list,]
write.csv(all_fluxes_resample_reps, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps.csv", row.names = FALSE)
# working df for coarse mound averages
all_fluxes_mound_avg <- all_fluxes_mound %>% group_by(ID_mound, sample, species_s) %>%
summarise(mean_mound_fluxCH4=mean(flux.CH4),
mean_mound_fluxCO2=mean(flux.CO2_umol),
mean_mound_fluxCH4_CO2=mean(CH4_CO2),
campaign = campaign,
temp = mean(avg_respT))
all_fluxes_mound_avg <- distinct(all_fluxes_mound_avg)
# merge with mound SA
mound_SA <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/supp_data/mound_SA.csv")
mound_SA <- mound_SA[, c('sample', 'SA_m2', 'basal_area_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$SA_m2),]
all_fluxes_mound_avg <- merge(all_fluxes_mound_avg, mound_SA, by = "sample")
# calculate mound-level flux
all_fluxes_mound_avg$mound_CH4flux <- all_fluxes_mound_avg$mean_mound_fluxCH4 * all_fluxes_mound_avg$SA_m2
all_fluxes_mound_avg$mound_CO2flux <- all_fluxes_mound_avg$mean_mound_fluxCO2 * all_fluxes_mound_avg$SA_m2
View(all_fluxes_mound_avg)
write.csv(all_fluxes_mound_avg, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_mound_avg.csv", row.names = FALSE)
# resampled mound averages
all_fluxes_resample_reps_avg <- all_fluxes_mound_avg[all_fluxes_mound_avg$sample %in% seasonal_list,]
write.csv(all_fluxes_resample_reps_avg, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps_avg.csv", row.names = FALSE)
# lists of CO2 and CH4 files from different seasons
CH4_daily <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinal_aug23_day_fixed.csv")
read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinal_aug23_day_fixed.csv")
CO2_daily <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CO2_fluxfinal_aug23_day_fixed.csv")
# merge CO2 and CH4 df together
all <- full_join(CO2_daily, CH4_daily)
# lists of CO2 and CH4 files from different seasons
CH4_daily <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinal_aug23_day_fixed.csv")
CO2_daily <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CO2_fluxfinal_aug23_day_fixed.csv")
# merge CO2 and CH4 df together
all <- full_join(CO2_daily, CH4_daily)
# convert CO2 from mmol to umol (in order to match CH4 units, conversion factor 1000umol = 1mmol)
all$flux.CO2_umol <- all$flux.CO2*1000
all <- all %>% relocate(flux.CO2_umol, .after = flux.CO2)
all <- all %>% relocate(flux.CH4, .after = flux.CO2_umol)
all <- all %>% relocate(R2.CH4, .after = R2.CO2)
all <- all %>% relocate(p.CH4, .after = p.CO2)
# define column for ratio of CH4:CO2
all$CH4_CO2 <-  all$flux.CH4/all$flux.CO2_umol
daily_fluxes <- all %>% relocate(CH4_CO2, .after = flux.CH4)
# rename species with scientific names
daily_fluxes$species_s <- ifelse(daily_fluxes$species == "Ami", "A. laurensis","")
daily_fluxes$species_s <- ifelse(daily_fluxes$species == "Nasuti", "N. magnus", daily_fluxes$species_s)
daily_fluxes$species_s <- ifelse(daily_fluxes$species == "Copto", "C. acinaciformis", daily_fluxes$species_s)
View(daily_fluxes)
write.csv(daily_fluxes, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_daily_fluxes.csv", row.names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(plyr)
library(ggpubr)
# all fluxes
all_fluxes <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes.csv")
# all fluxes - mound
all_fluxes_mound <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_mound.csv")
# all fluxes - soil
all_fluxes_soil <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_soil.csv")
# all fluxes - seasonal
all_fluxes_seasonal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps.csv")
# all fluxes - daily
all_fluxes_daily <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_daily_fluxes.csv")
# all fluxes - mound average
all_fluxes_mound_avg <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_mound_avg.csv")
# all fluxes - naked termites
all_fluxes_NT <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_NT.csv")
ggplot(data = all_fluxes_mound, aes(x = species_s, y = flux.CH4, fill = species_s)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylim(0,28000) + # removes two outliers to make graph more readable
ylab("CH4 flux umol/d/m2")+
xlab("")
ggplot(data = all_fluxes_mound, aes(x = species_s, y = flux.CO2, fill = species_s)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylab("CO2 flux mmol/d/m2")+
xlab("")
ggplot(data = all_fluxes_mound, aes(x = species_s, y = CH4_CO2, fill = species_s)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylab("CH4:CO2")+
ylim(0,0.075)+ # removes big outlier
xlab("")
# table of averages by species
detach(package:plyr)
sp_avg <- all_fluxes_mound %>% group_by(species_s) %>%
summarize(mean_CH4flux = mean(flux.CH4),
mean_CO2flux = mean(flux.CO2),
sd_CH4flux = sd(flux.CH4),
sd_CO2flux = sd(flux.CO2))
sp_avg
# reorder levels of campaigns
all_fluxes_seasonal$campaign <- factor(all_fluxes_seasonal$campaign, levels = c("may22", "aug23", "nov22", "feb24"))
# select for mound data only
all_fluxes_seasonal_mound <- all_fluxes_seasonal[all_fluxes_seasonal$flux_source =="m",]
# CH4 flux
s1 <- ggplot(data = all_fluxes_seasonal_mound, aes(x = species_s, y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylim(0, 22186) + # removes negative outlier
ylab("CH4 flux umol/d/m2")+
xlab("")
# CO2 flux
s2 <- ggplot(data = all_fluxes_seasonal_mound, aes(x = species_s, y = flux.CO2, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylim(0,4833) + # removes negative outlier
ylab("CO2 flux mmol/d/m2")+
xlab("")
# overall CH4:CO2 from three different species
s3 <- ggplot(data = all_fluxes_mound, aes(x = species_s, y = CH4_CO2, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylab("CH4:CO2")+
ylim(0,0.06)+ # removes big outlier
xlab("")
ggarrange(s1,s2, ncol = 2, common.legend = TRUE)
# reorder levels of campaigns
all_fluxes_seasonal$campaign <- factor(all_fluxes_seasonal$campaign, levels = c("may22", "aug23", "nov22", "feb24"))
# all fluxes - seasonal
all_fluxes_seasonal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps.csv")
View(all_fluxes_soil)
# reorder levels of campaigns
all_fluxes$campaign <- factor(all_fluxes$campaign, levels = c("may22", "aug23", "nov22", "feb24"))
# summary of how mounds were measured for each campaign
detach(package:plyr)
summary_counts <- all_fluxes %>%
group_by(campaign, species_s) %>%
summarise(unique_samples = n_distinct(sample))
# measurements per mound
measurements_per_mound <- aggregate(all_fluxes$tag , by=list(all_fluxes$ID_mound ), FUN=length)
measurements_per_mound <- measurements_per_mound %>%
rename(ID_mound = Group.1,
count = x)
# how many measurements were made for each mound in the resampling campaign (should be 4 or 5)
targets1 <- unique(nov_CH4$sample)
targets2 <- unique(aug_CH4$sample)
targets3 <- unique(feb_CH4$sample)
targets <- union(targets1, targets2)
targets_fin <- union(targets, targets3)
all_fluxes_resample <- all_fluxes[all_fluxes$sample %in% targets_fin, ]
# measurements across all 4 campaigns
resample_repeats <- all_fluxes_resample %>%
group_by(sample) %>%
summarise(repeats = n_distinct(campaign),
species = unique(species_s))
# filter out mounds with fewer than 4 time points
seasonal_list <- resample_repeats[resample_repeats$repeats>3,]
seasonal_list <- seasonal_list$sample
all_fluxes_resample_reps <- all_fluxes_resample[all_fluxes_resample$sample %in% seasonal_list,]
write.csv(all_fluxes_resample_reps, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps.csv", row.names = FALSE)
# working df for coarse mound averages
all_fluxes_mound_avg <- all_fluxes_mound %>% group_by(ID_mound, sample, species_s) %>%
summarise(mean_mound_fluxCH4=mean(flux.CH4),
mean_mound_fluxCO2=mean(flux.CO2_umol),
mean_mound_fluxCH4_CO2=mean(CH4_CO2),
campaign = campaign,
temp = mean(avg_respT))
all_fluxes_mound_avg <- distinct(all_fluxes_mound_avg)
# merge with mound SA
mound_SA <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/supp_data/mound_SA.csv")
mound_SA <- mound_SA[, c('sample', 'SA_m2', 'basal_area_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$SA_m2),]
all_fluxes_mound_avg <- merge(all_fluxes_mound_avg, mound_SA, by = "sample")
# calculate mound-level flux
all_fluxes_mound_avg$mound_CH4flux <- all_fluxes_mound_avg$mean_mound_fluxCH4 * all_fluxes_mound_avg$SA_m2
all_fluxes_mound_avg$mound_CO2flux <- all_fluxes_mound_avg$mean_mound_fluxCO2 * all_fluxes_mound_avg$SA_m2
write.csv(all_fluxes_mound_avg, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_mound_avg.csv", row.names = FALSE)
# resampled mound averages
all_fluxes_resample_reps_avg <- all_fluxes_mound_avg[all_fluxes_mound_avg$sample %in% seasonal_list,]
write.csv(all_fluxes_resample_reps_avg, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps_avg.csv", row.names = FALSE)
# all fluxes - seasonal
all_fluxes_seasonal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps.csv")
# reorder levels of campaigns
all_fluxes_seasonal$campaign <- factor(all_fluxes_seasonal$campaign, levels = c("may22", "aug23", "nov22", "feb24"))
# select for mound data only
all_fluxes_seasonal_mound <- all_fluxes_seasonal[all_fluxes_seasonal$flux_source =="m",]
View(all_fluxes_seasonal)
ggplot(data = all_fluxes_seasonal_mound, aes(x = species_s, y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylim(0, 22186) + # removes negative outlier
ylab("CH4 flux umol/d/m2")+
xlab("")
# all fluxes - seasonal
all_fluxes_seasonal_reps <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps_avg.csv")
# reorder levels of campaigns
all_fluxes_seasonal_reps$campaign <- factor(all_fluxes_seasonal_reps$campaign, levels = c("may22", "aug23", "nov22", "feb24"))
View(all_fluxes_seasonal_reps)
ggplot(all_fluxes_seasonal_reps, aes(x = species_s, y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylim(0, 22186) + # removes negative outlier
ylab("CH4 flux umol/d/m2")+
xlab("")
ggplot(all_fluxes_seasonal_reps, aes(x = species_s, y = mean_mound_fluxCH4, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylim(0, 22186) + # removes negative outlier
ylab("CH4 flux umol/d/m2")+
xlab("")
View(all_fluxes_seasonal_mound)
ggplot(data = all_fluxes_seasonal_reps, aes(x = species_s, y = mean_mound_fluxCO2, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylim(0,4833) + # removes negative outlier
ylab("CO2 flux mmol/d/m2")+
xlab("")
ggplot(data = all_fluxes_seasonal_reps, aes(x = species_s, y = mean_mound_fluxCO2, fill = campaign)) +
geom_boxplot()
ggplot(data = all_fluxes_seasonal_reps, aes(x = species_s, y = mean_mound_fluxCO2, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()
ggplot(data = all_fluxes_seasonal_reps, aes(x = species_s, y = mean_mound_fluxCO2, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
# ylim(0,4833) + # removes negative outlier
ylab("CO2 flux mmol/d/m2")+
xlab("")
ggplot(data = all_fluxes_seasonal_reps, aes(x = species_s, y = mean_mound_fluxCH4_CO2, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylab("CH4:CO2")
ggplot(data = all_fluxes_seasonal_reps, aes(x = species_s, y = mean_mound_fluxCH4_CO2, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylab("CH4:CO2")+
ylim(0,0.06)+ # removes big outlier
xlab("")
ggplot(all_fluxes_seasonal_reps, aes(x = avg_respT, y = log(mean_mound_fluxCH4), color = campaign))+
geom_smooth(method = 'lm', se = TRUE)+
geom_point()+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()
ggplot(all_fluxes_seasonal_reps, aes(x = temp, y = log(mean_mound_fluxCH4), color = campaign))+
geom_smooth(method = 'lm', se = TRUE)+
geom_point()+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()
View(all_fluxes_seasonal_mound)
# mound flux and temperature
t1 <- ggplot(all_fluxes_seasonal_reps, aes(x = temp, y = log(mean_mound_fluxCH4), color = campaign))+
geom_smooth(method = 'lm', se = TRUE)+
geom_point()+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()
t2 <- ggplot(all_fluxes_seasonal_reps, aes(x = temp, y = mean_mound_fluxCO2, color = campaign))+
geom_smooth(method = 'auto', se = TRUE)+
ylab("CO2 flux mmol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()
ggarrange(t1, t2, ncol = 1, common.legend = TRUE)
# mound flux and time of day with temperature included
t <- all_fluxes_seasonal_mound[all_fluxes_seasonal_mound$campaign %in% c("nov22", "aug23", "feb24"),]
t$flux_start <- strptime(t$flux_start, "%H:%M")
tt <- all_fluxes_seasonal_mound[all_fluxes_seasonal_mound$campaign %in% c("may22"),]
start <- nchar(tt$flux_start) - 7
tt$flux_start_test <- substring(tt$flux_start, start, nchar(tt$flux_start))
tt$flux_start <- strptime(tt$flux_start_test, "%H:%M")
tt <- tt[, -which(names(tt) == "flux_start_test")]
all_fluxes_seasonal_mound_withtime <- rbind(t, tt)
# temperature throughout the day by season
t3 <- ggplot(all_fluxes_seasonal_mound_withtime, aes(x = as.POSIXct(flux_start), y = avg_respT, color = campaign))+
geom_jitter()+
geom_smooth(method = 'lm', se = TRUE)+
ylab("Average Mound Surface Temperature (C)")+
xlab("Time of day")+
theme_classic()
# temperature response of gas flux by season
t4 <- ggplot(all_fluxes_seasonal_mound_withtime, aes(x = avg_respT, y = flux.CH4, color = campaign))+
geom_point()+
geom_smooth(method = 'lm', se = FALSE)+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()+
ylim(0,25000) # address negative outlier
ggarrange(t3, t4, ncol = 1, common.legend = TRUE)
# table of averages by season
detach(package:plyr)
ggplot(all_fluxes_seasonal_reps, aes(x = temp, y = mean_mound_fluxCO2, color = campaign))+
geom_smooth(method = 'auto', se = TRUE)+
ylab("CO2 flux mmol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()
ggplot(all_fluxes_seasonal_reps, aes(x = temp, y = mean_mound_fluxCO2, color = campaign))+
geom_smooth(method = 'lm', se = TRUE)+
ylab("CO2 flux mmol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()
ggplot(all_fluxes_seasonal_reps, aes(x = temp, y = log(mean_mound_fluxCH4), color = campaign))+
geom_smooth(method = 'lm', se = TRUE)+
geom_point()+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()
ggplot(all_fluxes_seasonal_reps, aes(x = temp, y = mean_mound_fluxCO2, color = campaign))+
geom_smooth(method = 'lm', se = TRUE)+
ylab("CO2 flux mmol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()
# mound flux and time of day with temperature included
t <- all_fluxes_seasonal_reps[all_fluxes_seasonal_reps$campaign %in% c("nov22", "aug23", "feb24"),]
t$flux_start <- strptime(t$flux_start, "%H:%M")
View(all_fluxes_seasonal_reps)
# all fluxes - seasonal with replication
all_fluxes_seasonal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps.csv")
View(all_fluxes_seasonal)
# all fluxes - seasonal with replication, as a mound average
all_fluxes_seasonal_avg <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps_avg.csv")
# reorder levels of campaigns
all_fluxes_seasonal_avg$campaign <- factor(all_fluxes_seasonal_avg$campaign, levels = c("may22", "aug23", "nov22", "feb24"))
# CH4 flux
s1 <- ggplot(all_fluxes_seasonal_avg, aes(x = species_s, y = mean_mound_fluxCH4, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylim(0, 22186) + # removes negative outlier
ylab("CH4 flux umol/d/m2")+
xlab("")
# CO2 flux
s2 <- ggplot(data = all_fluxes_seasonal_avg, aes(x = species_s, y = mean_mound_fluxCO2, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylab("CO2 flux mmol/d/m2")+
xlab("")
# overall CH4:CO2 from three different species
s3 <- ggplot(data = all_fluxes_seasonal_avg, aes(x = species_s, y = mean_mound_fluxCH4_CO2, fill = campaign)) +
geom_boxplot()+
scale_x_discrete(limits = c("N. magnus", "A. laurensis", "C. acinaciformis"))+
theme_classic()+
ylab("CH4:CO2")+
ylim(0,0.06)+ # removes big outlier
xlab("")
ggarrange(s1,s2, ncol = 2, common.legend = TRUE)
# mound flux and temperature
t1 <- ggplot(all_fluxes_seasonal_avg, aes(x = temp, y = log(mean_mound_fluxCH4), color = campaign))+
geom_smooth(method = 'lm', se = TRUE)+
geom_point()+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()
t2 <- ggplot(all_fluxes_seasonal_avg, aes(x = temp, y = mean_mound_fluxCO2, color = campaign))+
geom_smooth(method = 'lm', se = TRUE)+
ylab("CO2 flux mmol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()
ggarrange(t1, t2, ncol = 1, common.legend = TRUE)
all_fluxes_seasonal[all_fluxes_seasonal$flux_source == "m",]
# mound flux and time of day with temperature included
all_fluxes_seasonal_mound <- all_fluxes_seasonal[all_fluxes_seasonal$flux_source == "m",]
View(all_fluxes_seasonal_mound)
t <- all_fluxes_seasonal_mound[all_fluxes_seasonal_mound$campaign %in% c("nov22", "aug23", "feb24"),]
t$flux_start <- strptime(t$flux_start, "%H:%M")
tt <- all_fluxes_seasonal_mound[all_fluxes_seasonal_mound$campaign %in% c("may22"),]
start <- nchar(tt$flux_start) - 7
tt$flux_start_test <- substring(tt$flux_start, start, nchar(tt$flux_start))
tt$flux_start <- strptime(tt$flux_start_test, "%H:%M")
tt <- tt[, -which(names(tt) == "flux_start_test")]
all_fluxes_seasonal_mound_withtime <- rbind(t, tt)
# temperature throughout the day by season
t3 <- ggplot(all_fluxes_seasonal_mound_withtime, aes(x = as.POSIXct(flux_start), y = avg_respT, color = campaign))+
geom_jitter()+
geom_smooth(method = 'lm', se = TRUE)+
ylab("Average Mound Surface Temperature (C)")+
xlab("Time of day")+
theme_classic()
# temperature response of gas flux by season
t4 <- ggplot(all_fluxes_seasonal_mound_withtime, aes(x = avg_respT, y = flux.CH4, color = campaign))+
geom_point()+
geom_smooth(method = 'lm', se = FALSE)+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
theme_classic()+
ylim(0,25000) # address negative outlier
ggarrange(t3, t4, ncol = 1, common.legend = TRUE)
View(all_fluxes_seasonal_avg)
season_avg <- all_fluxes_seasonal_avg %>% group_by(species_s, campaign) %>%
summarize(mean_CH4flux = mean(mean_mound_fluxCH4),
mean_CO2flux = mean(mean_mound_fluxCO2),
sd_CH4flux = sd(mean_mound_fluxCH4),
sd_CO2flux = sd(mean_mound_fluxCO2))
season_avg
# position in mound
all_fluxes_mound$position <- ifelse(all_fluxes_mound$position == "top ", "top", all_fluxes_mound$position)
ggplot(data = all_fluxes_mound, aes(x = species_s, y = flux.CH4, fill = position)) +
geom_boxplot()+
theme_classic()+
ylab("CH4 flux umol/d/m2")+
ylim(0,24000)+ # removes big outlier
xlab("")
# direction on mound
ggplot(data = all_fluxes_mound, aes(x = directon, y = flux.CH4, fill = directon)) +
geom_boxplot()+
theme_classic()+
ylab("CH4 flux umol/d/m2")+
ylim(0,24000)+ # removes big outlier
xlab("Direction")+
scale_x_discrete(limits = c("E", "N", "S", "W"), labels = c("E", "N", "S", "W"))
# reorder levels of campaigns
all_fluxes_mound_avg$campaign <- factor(all_fluxes_mound_avg$campaign, levels = c("may22", "aug23", "nov22", "feb24"))
# graph methane flux by mound size (surface/basal area interchangeable: SA_m2/basal_area_m2)
a1 <- ggplot(all_fluxes_mound_avg, aes(x = SA_m2, y = mean_mound_fluxCH4)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(species_s~campaign, scales = "free")+
theme_classic()+
ylab("Mean mound CH4 flux (umol/d/mound)") +
xlab("Mound surface area (m2)")
# graph carbon dioxide flux by mound size
a2 <- ggplot(data = all_fluxes_mound_avg, aes(x = SA_m2, y = mean_mound_fluxCO2)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_grid(species_s~campaign, scales = "free_x")+
theme_classic()+
ylab("Total mound CO2 flux (mmol/d/mound)") +
xlab("Mound surface area (m2)")
# graph CH4:CO2 flux by mound size
a3 <- ggplot(data = all_fluxes_mound_avg, aes(x = basal_area_m2, y = mean_mound_fluxCH4_CO2)) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species_s, scales = "free_x")+
theme_classic()+
ylab("Total mound CH4:CO2") +
xlab("Mound basal area (m2)")
ggarrange(a1, a2, a3, ncol = 1)
# relationship between surface area and basal area (by species)
ggplot(data = all_fluxes_mound_avg, aes(x = SA_m2, y = basal_area_m2)) +
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~species_s, scales = "free_x")+
theme_classic()+
ylab("Mound basal area (m2)") +
xlab("Mound surface area (m2)")
df <- all_fluxes_mound[!is.na(all_fluxes_mound$wall_thickness_mm), ]
ggplot(df, aes(x = wall_thickness_mm, y = flux.CH4, color = species_s)) +
geom_point()+
theme_classic()+
ylab("CH4 flux umol/d/m2")+
xlab("Mound wall thickness (mm)")
# reorder levels of time of day
all_fluxes_daily$time_of_day <- factor(all_fluxes_daily$time_of_day, levels = c("morning", "midday", "afternoon", "night"))
ggplot(all_fluxes_daily, aes(x = time_of_day, y = flux.CH4, fill = time_of_day))+
geom_boxplot()+
geom_point()+
theme_classic()+
theme(legend.position="none")+
xlab("")+
ylab("CH4 flux (umol/d/mound)")
# with species split out
d1 <- ggplot(all_fluxes_daily, aes(x = time_of_day, y = flux.CH4, fill = species_s))+
geom_boxplot()+
theme_classic()+
xlab("")+
ylab("CH4 flux (umol/d/mound)")
d2 <- ggplot(all_fluxes_daily, aes(x = species_s, y = flux.CH4, fill = time_of_day))+
geom_boxplot()+
theme_classic()+
xlab("")+
ylab("CH4 flux (umol/d/mound)")+
ylim(0,25000) # removes outlier
ggarrange(d1,d2)
# temperature throughout daily cycle
all_fluxes_daily$flux_start_test <- strptime(all_fluxes_daily$flux_start, "%H:%M")
ggplot(all_fluxes_daily, aes(x = as.POSIXct(flux_start_test), y = avg_respT))+
geom_point()+
theme_classic()+
theme(legend.position="none")+
xlab("Time of Day")+
ylab("Temperature (C)")
# termite emission factor
ggplot(all_fluxes_NT, aes(x = species, y = emission_factor, fill = species))+
geom_boxplot()+
geom_jitter()+
theme_classic()+
theme(legend.position = "none")
# flux by material
n <- ggplot(all_fluxes_NT, aes(x = species, y = flux.CH4, fill = material))+
geom_boxplot()+
theme_classic()
o <- ggplot(all_fluxes_NT, aes(x = species, y = flux.CO2, fill = material))+
geom_boxplot()+
theme_classic()
ggarrange(n, o, ncol = 1 )

bottom
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ggpubr)
CH4_fluxfinal<- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinalTMI.csv")
species <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/Abbey termites .xlsx - Sheet1.csv")
species <- species[c("X", "ID_cleaned")]
# merge sp and CH4flux_final, CO2_fluxfinal
species <- species %>%
rename(sample = X)
CH4_fluxfinal <- merge(CH4_fluxfinal, species, by = c("sample"))
# subset out soils to have a df containing only mound information
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
# one way ANOVA
aov.1 <- aov(flux.CH4 ~ ID_cleaned, data = mounds) # note experimental switch out of CH4 flux with CH4:CO2
summary(aov.1)
TukeyHSD(aov.1)
# assumptions
par(mfrow=c(2,2))
plot(aov.1)
par(mfrow=c(1,1))
avgflux <- aggregate(mounds$flux.CH4, list(mounds$sample), FUN=mean)
y <- mounds[, c("sample",  "ID_cleaned")]
avgflux <- left_join(avgflux, y, by = c("Group.1"="sample"))
avgflux <- unique(avgflux)
# average methane flux by species
ggplot(data = avgflux, aes(x = as.factor(ID_cleaned), y = x)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# anova on mound averages between species
aov.3 <- aov(x ~ ID_cleaned, data = avgflux)
summary(aov.3)
TukeyHSD(aov.3)
# pick out top 5 highest methane fluxes by species
top <- avgflux %>%
arrange(desc(x)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
top
# pick out bottom 5 lowest methane fluxes by species
bottom <- avgflux %>%
arrange(x) %>%
group_by(ID_cleaned) %>%
slice(1:5)
bottom
merge(top, bottom)
merge(top, bottom, by = "Group.1")
View(bottom)
q1 <- rbind(top, bottom)
View(q1)
top$rank <- "top"
top
View(top)
bottom$rank <- "bottom"
bottom
q1 <- rbind(top, bottom)
View(q1)
q1 <- complete.cases(q1)
top <- avgflux %>%
arrange(desc(x)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
top$rank <- "top"
top
# pick out bottom 5 lowest methane fluxes by species
bottom <- avgflux %>%
arrange(x) %>%
group_by(ID_cleaned) %>%
slice(1:5)
bottom$rank <- "bottom"
bottom
q1 <- rbind(top, bottom)
q1 <- q1[complete.cases(q1), ]
q1 <- q1[complete.cases(q1), ]
q1 <- q1 %>% mutate_all(na_if,"")
q1 <- q1[complete.cases(q1), ]
q1[q1$ID_cleaned==""] <- NA
q1[q1==""] <- NA
q1 <- na.omit(q1)
q1 <- q1 %>%
rename(species = Group.1)
q1 <- q1 %>%
rename(sample = Group.1,
x = flux)
q1 <- q1 %>%
rename(sample = Group.1,
x=flux = x)
q1 <- q1 %>%
rename(sample = Group.1,
x = flux)
top <- avgflux %>%
arrange(desc(x)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
top$rank <- "top"
top
# pick out bottom 5 lowest methane fluxes by species
bottom <- avgflux %>%
arrange(x) %>%
group_by(ID_cleaned) %>%
slice(1:5)
bottom$rank <- "bottom"
bottom
q1 <- rbind(top, bottom)
q1[q1==""] <- NA
q1 <- na.omit(q1)
q1 <- q1 %>%
rename(sample = Group.1,
x = flux)
q1 <- q1 %>%
rename(sample = Group.1,
flux = x)
# export .csv
write.csv(q1, "/Users/abbeyyatsko/Downloads/q1.csv")
# calculate min and max flux for each sample
data_min <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(min = min))
data_max <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(max = max))
minmax <- merge(data_max, data_min, by="sample")
minmax$range <- minmax$max - minmax$min
# merge in species info
minmax <- left_join(minmax, y, by = "sample")
minmax <- unique(minmax)
# range in intermound methane production by sample
ggplot(data = minmax, aes(x = as.factor(ID_cleaned), y = range)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# choose 5 most variable mounds (greatest range)
variable <- minmax %>%
arrange(desc(range)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
variable
# remove entries without species info, clean up df
q2[q2==""] <- NA
# remove entries without species info, clean up df
variable[variable==""] <- NA
View(variable)
variable <- na.omit(variable)
q2 <- variable
View(q2)
# export .csv
write.csv(q2, "/Users/abbeyyatsko/Downloads/q2.csv")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ggpubr)
CO2_fluxfinal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CO2_fluxfinalTMI.csv")
CH4_fluxfinal<- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinalTMI.csv")
species <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/Abbey termites .xlsx - Sheet1.csv")
species <- species[c("X", "ID_cleaned")]
# merge sp and CH4flux_final, CO2_fluxfinal
species <- species %>%
rename(sample = X)
CH4_fluxfinal <- merge(CH4_fluxfinal, species, by = c("sample"))
CO2_fluxfinal <- merge(CO2_fluxfinal, species, by = c("sample"))
# new column for methane:co2
# first need to convert CO2 from mmol to umol (in order to match CH4 in units of umol)
# (conversion factor 1000umol = 1mmol)
CO2_fluxfinal$flux.CO2_umol <- CO2_fluxfinal$flux.CO2*1000
CO2_fluxfinal <- CO2_fluxfinal %>% relocate(flux.CO2_umol, .after = flux.CO2)
CH4_fluxfinal$ch4_co2 <-  CH4_fluxfinal$flux.CH4/CO2_fluxfinal$flux.CO2
CH4_fluxfinal <- CH4_fluxfinal %>% relocate(ch4_co2, .after = flux.CH4)
# subset df to create just soils and just mounds (for later on. just to have df prepped)
soils <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 's',]
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
View(CH4_fluxfinal)
# remove unidentified mounds
mounds[mounds==""] <- NA
View(mounds)
mounds <- na.omit(mounds$ID_cleaned)
species <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/Abbey termites .xlsx - Sheet1.csv")
species <- species[c("X", "ID_cleaned")]
# merge sp and CH4flux_final, CO2_fluxfinal
species <- species %>%
rename(sample = X)
CH4_fluxfinal <- merge(CH4_fluxfinal, species, by = c("sample"))
CO2_fluxfinal <- merge(CO2_fluxfinal, species, by = c("sample"))
# new column for methane:co2
# first need to convert CO2 from mmol to umol (in order to match CH4 in units of umol)
# (conversion factor 1000umol = 1mmol)
CO2_fluxfinal$flux.CO2_umol <- CO2_fluxfinal$flux.CO2*1000
CO2_fluxfinal <- CO2_fluxfinal %>% relocate(flux.CO2_umol, .after = flux.CO2)
CH4_fluxfinal$ch4_co2 <-  CH4_fluxfinal$flux.CH4/CO2_fluxfinal$flux.CO2
CH4_fluxfinal <- CH4_fluxfinal %>% relocate(ch4_co2, .after = flux.CH4)
# subset df to create just soils and just mounds (for later on. just to have df prepped)
soils <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 's',]
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
[
# remove unidentified mounds
mounds[mounds==""] <- NA
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ggpubr)
CO2_fluxfinal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CO2_fluxfinalTMI.csv")
CH4_fluxfinal<- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinalTMI.csv")
species <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/Abbey termites .xlsx - Sheet1.csv")
species <- species[c("X", "ID_cleaned")]
# merge sp and CH4flux_final, CO2_fluxfinal
species <- species %>%
rename(sample = X)
CH4_fluxfinal <- merge(CH4_fluxfinal, species, by = c("sample"))
CO2_fluxfinal <- merge(CO2_fluxfinal, species, by = c("sample"))
# new column for methane:co2
# first need to convert CO2 from mmol to umol (in order to match CH4 in units of umol)
# (conversion factor 1000umol = 1mmol)
CO2_fluxfinal$flux.CO2_umol <- CO2_fluxfinal$flux.CO2*1000
CO2_fluxfinal <- CO2_fluxfinal %>% relocate(flux.CO2_umol, .after = flux.CO2)
CH4_fluxfinal$ch4_co2 <-  CH4_fluxfinal$flux.CH4/CO2_fluxfinal$flux.CO2
CH4_fluxfinal <- CH4_fluxfinal %>% relocate(ch4_co2, .after = flux.CH4)
# subset df to create just soils and just mounds (for later on. just to have df prepped)
soils <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 's',]
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
# remove unidentified mounds
mounds[mounds==""] <- NA
mounds[!is.na(mounds$ID_cleaned),]
mounds <- mounds[!is.na(mounds$ID_cleaned),]
View(mounds)
, fill = flux_source
e <- ggplot(data = mounds, aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = flux_source)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
f <- ggplot(data = mounds, aes(x = as.factor(ID_cleaned), y = ch4_co2, fill = flux_source)) +
geom_boxplot()+
geom_jitter()+
theme_light()+
scale_y_continuous(limits = c(-1, 50))
ggarrange(e, f, ncol = 1)
f
e
ggarrange(e, f, ncol = 1)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ggpubr)
CH4_fluxfinal<- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinalTMI.csv")
species <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/Abbey termites .xlsx - Sheet1.csv")
species <- species[c("X", "ID_cleaned")]
# merge sp and CH4flux_final, CO2_fluxfinal
species <- species %>%
rename(sample = X)
CH4_fluxfinal <- merge(CH4_fluxfinal, species, by = c("sample"))
# subset out soils to have a df containing only mound information
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
avgflux <- aggregate(mounds$flux.CH4, list(mounds$sample), FUN=mean)
y <- mounds[, c("sample",  "ID_cleaned")]
avgflux <- left_join(avgflux, y, by = c("Group.1"="sample"))
avgflux <- unique(avgflux)
# average methane flux by species
ggplot(data = avgflux, aes(x = as.factor(ID_cleaned), y = x)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# anova on mound averages between species
aov.3 <- aov(x ~ ID_cleaned, data = avgflux)
summary(aov.3)
TukeyHSD(aov.3)
# pick out top 5 highest methane fluxes by species
top <- avgflux %>%
arrange(desc(x)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
top$rank <- "top"
top
# pick out bottom 5 lowest methane fluxes by species
bottom <- avgflux %>%
arrange(x) %>%
group_by(ID_cleaned) %>%
slice(1:5)
bottom$rank <- "bottom"
bottom
# remove entries without species info, clean up df
q1 <- rbind(top, bottom)
q1[q1==""] <- NA
q1 <- na.omit(q1)
q1 <- q1 %>%
rename(sample = Group.1,
flux = x)
# export .csv
write.csv(q1, "/Users/abbeyyatsko/Downloads/q1.csv")
View(q1)
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = sample, y = flux, fill = rank)) +
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = sample, y = flux, fill = rank)) +
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = sample, y = flux, fill = rank)) +
geom_col() +
facet_grid(~ ID_cleaned,
scales = "free_x",
space = "free_x",
switch = "x")
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = sample, y = flux, fill = rank)) +
geom_bar() +
facet_grid(~ ID_cleaned,
scales = "free_x",
space = "free_x",
switch = "x")
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = sample, y = flux)) +
geom_bar() +
facet_grid(~ ID_cleaned,
scales = "free_x",
space = "free_x",
switch = "x")
str(q1)
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = as.factor(sample), y = flux)) +
geom_bar() +
facet_grid(~ ID_cleaned,
scales = "free_x",
space = "free_x",
switch = "x")
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = as.factor(sample), y = flux)) +
geom_bar() +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = as.factor(sample), y = flux)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = as.factor(sample), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -flux), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -flux), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
theme_classic()
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -flux), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -flux), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
theme_classic()
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -flux), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
q2fig <- q2[q2$sample]
# calculate min and max flux for each sample
data_min <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(min = min))
data_max <- mounds %>%
group_by(sample) %>%
summarise_at(vars(flux.CH4),
list(max = max))
minmax <- merge(data_max, data_min, by="sample")
minmax$range <- minmax$max - minmax$min
# merge in species info
minmax <- left_join(minmax, y, by = "sample")
minmax <- unique(minmax)
# range in intermound methane production by sample
ggplot(data = minmax, aes(x = as.factor(ID_cleaned), y = range)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
# choose 5 most variable mounds (greatest range)
variable <- minmax %>%
arrange(desc(range)) %>%
group_by(ID_cleaned) %>%
slice(1:5)
variable
# remove entries without species info, clean up df
variable[variable==""] <- NA
variable <- na.omit(variable)
q2 <- variable
# export .csv
#write.csv(q2, "/Users/abbeyyatsko/Downloads/q2.csv")
q2fig <- q2[q2$sample]
# boxplot of individual mounds
q2samps <- q2[q2$sample]
# boxplot of individual mounds
q2[q2$sample]
q2
# boxplot of individual mounds
q2_samps <- as.vector(q2$sample)
View(mounds)
q2_samps <- mounds[ mounds$sample %in% q2_samps, ]
View(q2_samps)
unique(q2_samps$sample)
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
theme_light()
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
theme_light()
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -flux), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("Mound")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data = q2_samps, aes(x = as.factor(sample), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
geom_jitter()+
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# bar graph grouped by species
# colored by top and bottom
ggplot(q1, aes(x = reorder(as.factor(sample), -flux), y = flux, fill = rank)) +
geom_bar(stat='identity') +
facet_grid(~ as.factor(ID_cleaned),
scales = "free_x",
space = "free_x",
switch = "x")+
ylab("CH4 flux umol/d/m2")+
xlab("")+
theme_classic()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

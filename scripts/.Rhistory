species_s = c("A. laurensis", "C. acinaciformis", "N. magnus"),  # Choose one species for visualization
campaign = c("may22", "aug23", "nov22", "feb24"))
# visualize non linear models
# polynomial
new_data <- data.frame(temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = c("A. laurensis", "C. acinaciformis", "N. magnus"),  # Choose one species for visualization
campaign = c("may22"))  # Choose one campaign for visualization
# visualize non linear models
# polynomial
new_data <- data.frame(temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = c("A. laurensis", "C. acinaciformis", "N. magnus"),  # Choose one species for visualization
campaign = c("may22"))  # Choose one campaign for visualization
# visualize non linear models
# polynomial
new_data <- data.frame(temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = c("A. laurensis", "C. acinaciformis", "N. magnus"),  # Choose one species for visualization
campaign = "may22")  # Choose one campaign for visualization
# visualize non linear models
# polynomial
new_data <- data.frame(temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = "A. laurensis",  # Choose one species for visualization
campaign = "may22")
# visualize non linear models
# polynomial
new_data <- data.frame(temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = c("A. laurensis", "C. acinaciformis", "N. magnus"),  # Choose one species for visualization
campaign = "may22")
# visualize non linear models
# polynomial
new_data <- data.frame(temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = c("A. laurensis", "C. acinaciformis"),  # Choose one species for visualization
campaign = "may22")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
new_data$predicted_flux <- predict(mod_poly, newdata = new_data, re.form = NA)
ggplot(all_fluxes_seasonal_avg, aes(x = temp, y = mean_mound_fluxCH4)) +
geom_point() +
geom_line(data = new_data, aes(x = temp, y = predicted_flux), color = "blue", size = 1) +
labs(title = "CH4 Flux vs Temperature (with Nonlinear Fit)",
x = "Temperature", y = "Mean Mound CH4 Flux")
# Create a plot for non-linear relationships
ggplot(new_data, aes(x = temp, y = predicted_flux, color = species_s)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Non-linear Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
# Create a plot for non-linear relationships
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Non-linear Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
# splines
new_data$predicted_flux <- predict(mod_spline, newdata = new_data, re.form = NA)
# splines
new_data$predicted_flux <- predict(mod_spline, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Spline Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
qqnorm(resid(mod_poly))
qqline(resid(mod_poly))
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red")
residuals <- resid(mod_spline)
fitted_values <- fitted(mod_spline)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
residuals <- resid(mod_spline)
fitted_values <- fitted(mod_spline)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red")
qqnorm(resid(mod_spline))
qqline(resid(mod_spline))
residuals <- resid(mod_poly)
fitted_values <- fitted(mod_poly)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red")
# polynomial
mod_poly <- lmer(mean_mound_fluxCH4 ~ poly(temp, 2) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(mod_poly)
residuals <- resid(mod_poly)
fitted_values <- fitted(mod_poly)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red")
# spl;ines
mod_spline <- lmer(mean_mound_fluxCH4 ~ ns(temp, 3) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(mod_spline)
residuals <- resid(mod_spline)
fitted_values <- fitted(mod_spline)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red")
qqnorm(resid(mod_poly))
qqline(resid(mod_poly))
qqnorm(resid(mod_spline))
qqline(resid(mod_spline))
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
new_data$predicted_flux <- predict(mod_poly, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Polynomial Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
# splines
new_data$predicted_flux <- predict(mod_spline, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Spline Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
mod <- lmer(mean_mound_fluxCH4 ~ temp*species_s*precip_1mo + (1 | sample), data = all_fluxes_seasonal_avg)
Anova(mod)
summary(mod)
library(lmerTest)
mod <- lmer(mean_mound_fluxCH4 ~ temp*species_s*campaign + (1 | sample), data = all_fluxes_seasonal_avg)
Anova(mod)
mod <- lmer(mean_mound_fluxCH4 ~ temp*species_s*precip_1mo + (1 | sample), data = all_fluxes_seasonal_avg)
Anova(mod)
# model without all interactions
mod <- lmer(mean_mound_fluxCH4 ~ temp  + species_s + precip_1mo + (1 | sample), data = all_fluxes_seasonal_avg)
summary(mod)
Anova(mod)
# nonlinear model
residuals <- resid(mod)
fitted_values <- fitted(mod)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red")
# polynomial
mod_poly <- lmer(mean_mound_fluxCH4 ~ poly(temp, 2) + species_s + precip_1mo + (1 | sample), data = all_fluxes_seasonal_avg)
summary(mod_poly)
residuals <- resid(mod_poly)
fitted_values <- fitted(mod_poly)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red")
qqnorm(resid(mod_poly))
qqline(resid(mod_poly))
# spl;ines
mod_spline <- lmer(mean_mound_fluxCH4 ~ ns(temp, 3) + species_s + precip_1mo + (1 | sample), data = all_fluxes_seasonal_avg)
summary(mod_spline)
residuals <- resid(mod_spline)
fitted_values <- fitted(mod_spline)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red")
qqnorm(resid(mod_spline))
qqline(resid(mod_spline))
AIC(mod, mod_poly, mod_spline)
# model without all interactions
mod <- lmer(mean_mound_fluxCH4 ~ temp  + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(mod)
# b) test environmental predictors (temperature and precipitation)
ggplot(all_fluxes_seasonal_avg, aes(x = temp, y = mean_mound_fluxCH4, color = campaign))+
geom_point()+
facet_wrap(~species_s)+
geom_smooth(method = 'lm', se = TRUE)+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
scale_color_brewer(palette = "Dark2")+
theme_classic()
# b) test environmental predictors (temperature and precipitation)
ggplot(all_fluxes_seasonal_avg, aes(x = temp, y = mean_mound_fluxCH4, color = campaign))+
geom_point()+
facet_wrap(~species_s)+
geom_smooth(method = 'loess', se = TRUE)+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
scale_color_brewer(palette = "Dark2")+
theme_classic()
# b) test environmental predictors (temperature and precipitation)
ggplot(all_fluxes_seasonal_avg, aes(x = temp, y = mean_mound_fluxCH4, color = campaign))+
geom_point()+
# facet_wrap(~species_s)+
geom_smooth(method = 'loess', se = TRUE)+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
scale_color_brewer(palette = "Dark2")+
theme_classic()
?ns()
?bs()
?ns()
mod_spline <- lmer(mean_mound_fluxCH4 ~ ns(temp, 3) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(mod_spline)
mod_spline <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 3) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(mod_spline)
spline3 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 3) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
spline4 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 4) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(spline4)
spline10 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 10) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(spline10)
summary(spline3)
AIC(spline3, spline4, spline10)
spline5 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 5) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(spline10)
summary(spline5)
AIC(spline3, spline4, spline5)
spline5 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 5) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
spline6 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 6) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(spline6)
AIC(spline3, spline4, spline5, spline6)
spline7 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 7) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(spline7)
AIC(spline3, spline4, spline5, spline6, spline7)
residuals <- resid(spline3)
fitted_values <- fitted(spline3)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red")
qqnorm(resid(spline3))
qqline(resid(spline3))
spline6 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 6) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
residuals <- resid(spline6)
fitted_values <- fitted(spline6)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
abline(h = 0, col = "red")
qqnorm(resid(spline6))
qqline(resid(spline6))
AIC(spline3, spline4, spline5, spline6, spline7, spline10)
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
# splines
new_data$predicted_flux <- predict(spline10, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Spline Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
# splines
new_data$predicted_flux <- predict(spline4, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Spline Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
# splines
new_data$predicted_flux <- predict(spline6, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Spline Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
# splines
new_data$predicted_flux <- predict(spline5, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Spline Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
# splines
new_data$predicted_flux <- predict(mod_spline, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Spline Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
# splines
new_data$predicted_flux <- predict(spline4, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Spline Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
# splines
new_data$predicted_flux <- predict(spline5, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Spline Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
# splines
new_data$predicted_flux <- predict(spline6, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Spline Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
mod <- lmer(mean_mound_fluxCH4 ~ campaign + species_s + (1 | sample), data = all_fluxes_seasonal_avg)
summary(mod)
ggpredict(mod, terms = c("species_s", "campaign")) %>% plot(add.data = TRUE)
# model without all interactions
mod <- lmer(mean_mound_fluxCH4 ~ temp  + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
summary(mod)
ggpredict(mod, terms = c("temp", "campaign", "species_s")) %>% plot(add.data = TRUE)
# polynomial
mod_poly <- lmer(mean_mound_fluxCH4 ~ poly(temp, 2) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
new_data$predicted_flux <- predict(mod_poly, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Polynomial Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
spline3 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 3) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
plot(fitted_values, residuals, main = "Residuals vs Fitted Values",
xlab = "Fitted Values", ylab = "Residuals")
# how many df to use? seems like anything above 5 does not make much sense (lines start to get a bit weird)
spline4 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 4) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
# spl;ines
mod_spline <- lmer(mean_mound_fluxCH4 ~ ns(temp, 3) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
new_data$predicted_flux <- predict(mod_poly, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Polynomial Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
new_data$predicted_flux <- predict(mod_spline, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Polynomial Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")
spline7 <- lmer(mean_mound_fluxCH4 ~ ns(temp, df = 7) + species_s + campaign + (1 | sample), data = all_fluxes_seasonal_avg)
# visualize non linear models
# polynomial
new_data <- expand.grid(
temp = seq(min(all_fluxes_seasonal_avg$temp), max(all_fluxes_seasonal_avg$temp), length.out = 100),
species_s = unique(all_fluxes_seasonal_avg$species_s),
campaign = unique(all_fluxes_seasonal_avg$campaign)
)
new_data$predicted_flux <- predict(spline7, newdata = new_data, re.form = NA)
ggplot(new_data, aes(x = temp, y = predicted_flux, color = campaign)) +
geom_line(aes(linetype = campaign)) +  # Different linetypes for campaigns
facet_wrap(~ species_s) +              # Separate plots for each species
labs(
x = "Temperature (°C)",
y = "Predicted CH4 Flux (umol/d/m2)",
title = "Polynomial Relationship between Temperature and CH4 Flux"
) +
theme_minimal() +
theme(legend.position = "bottom")

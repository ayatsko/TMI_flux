library(rstatix)
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
stat_compare_means(method = "anova")+
stat_compare_means(label = "p.signif", method = "t.test",
ref.group = ".all.")+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
guides(fill=guide_legend(title=""))+
theme_classic()
# overall methane flux by species contrasted by season
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..),
label.x = 1.5, label.y = 23000) +
theme_classic()
# overall methane flux by species contrasted by season
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~species)
# overall methane flux by species contrasted by season
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~species)+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..),
label.x = 1.5, label.y = 23000) +
theme_classic()
# overall methane flux by species contrasted by season
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned)+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..),
label.x = 1.5, label.y = 23000) +
theme_classic()
# overall methane flux by species contrasted by season
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..),
label.x = 1.5, label.y = 23000) +
theme_classic()
# overall methane flux by species contrasted by season
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..),
label.x = 1.5, label.y = 23000) +
theme_classic()
View(mounds_ID)
# 't-tests for individual species comparing season
stat.test <- mounds_ID %>%
group_by(ID_cleaned) %>%
t_test(flux.CH4 ~ ID_cleaned) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
# 't-tests for individual species comparing season
stat.test <- mounds_ID %>%
group_by(ID_cleaned) %>%
t_test(flux.CH4 ~ ID_cleaned) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
t_test(flux.CH4 ~ ID_cleaned)
mounds_ID %>%
group_by(ID_cleaned)
mounds_ID %>%
group_by(ID_cleaned) %>%
t_test(flux.CH4 ~ ID_cleaned)
stat.test <- mounds_ID %>%
group_by(campaign)
stat.test <- mounds_ID %>%
group_by(campaign) %>%
t_test(flux.CH4 ~ ID_cleaned)
stat.test <- mounds_ID %>%
group_by(campaign) %>%
t_test(flux.CH4 ~ ID_cleaned) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
stat.test
# 't-tests for individual species comparing season
stat.test <- mounds_ID %>%
group_by(ID_cleaned) %>%
t_test(flux.CH4 ~ campaign) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
stat.test <- mounds_ID %>%
group_by(ID_cleaned)
stat.test <- mounds_ID %>%
group_by(ID_cleaned) %>%
t_test(flux.CH4 ~ campaign)
# overall methane flux by species contrasted by season
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..), label.x = 1.5, label.y = 20000) +
theme_classic()
# t-tests for individual species comparing season
mounds_ID[mounds_ID$ID_cleaned == "Ami"]
# t-tests for individual species comparing season
mounds_ID[,mounds_ID$ID_cleaned == "Ami"]
# t-tests for individual species comparing season
mounds_ID[mounds_ID$ID_cleaned == "Ami",]
# t-tests for individual species comparing season
ami <- mounds_ID[mounds_ID$ID_cleaned == "Ami",]
View(ami)
ami %>%
t_test(flux.CH4 ~ campaign, paired = TRUE, detailed = TRUE) %>%
add_significance()
table(ami$campaign)
# first subset mounds by repeated seasonal measures (8 mounds / species)
nov <- mounds_ID[mounds_ID$campaign == "nov",]
View(nov)
# first subset mounds by repeated seasonal measures (8 mounds / species)
nov <- mounds_ID[mounds_ID$campaign == "nov22",]
target_mounds <- unique(nov$ID_cleaned)
target_mounds <- unique(nov$sample)
test <- mounds_ID$sample %in% target_mounds
test <- mounds_ID[mounds_ID$sample %in% target_mounds,]
View(test)
# t-tests for individual species comparing season
ami <- mounds_ID[mounds_ID$ID_cleaned == "Ami",]
stat.test <- ami %>%
t_test(flux.CH4 ~ campaign)
stat.test <- ami %>%
t_test(flux.CH4 ~ campaign) %>%
add_significance()
stat.test
mounds_ID %>%
group_by(ID_cleaned)
stat.test <- mounds_ID %>%
group_by(ID_cleaned) %>%
t_test(flux.CH4 ~ campaign) %>%
add_significance()
# t-tests for individual species comparing season
copto <- mounds_ID[mounds_ID$ID_cleaned == "Copto",]
stat.test <- ami %>%
t_test(flux.CH4 ~ campaign) %>%
add_significance()
stat.test <- copto %>%
t_test(flux.CH4 ~ campaign) %>%
add_significance()
stat.test
# t-tests for individual species comparing season
nas <- mounds_ID[mounds_ID$ID_cleaned == "Nasuti",]
stat.test <- nas %>%
t_test(flux.CH4 ~ campaign) %>%
add_significance()
stat.test
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = ID_cleaned)) +
geom_boxplot()+
stat_compare_means(method = "anova")+
stat_compare_means(label = "p.signif", method = "t.test",
ref.group = ".all.")+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
guides(fill=guide_legend(title=""))+
theme_classic()
# all season average for species comparison
mounds_ID[!mounds_ID$ID_cleaned =="Macro",] %>% tukey_hsd(flux.CH4 ~ ID_cleaned)
# t-tests for individual species comparing season
nas <- test[test$ID_cleaned == "Nasuti",]
stat.test <- nas %>%
t_test(flux.CH4 ~ campaign) %>%
add_significance()
stat.test
# t-tests for individual species comparing season
cop <- test[test$ID_cleaned == "Copto",]
stat.test <- cop %>%
t_test(flux.CH4 ~ campaign) %>%
add_significance()
stat.test
# t-tests for individual species comparing season
ami <- test[test$ID_cleaned == "Ami",]
stat.test <- ami %>%
t_test(flux.CH4 ~ campaign) %>%
add_significance()
stat.test
CO2_fluxfinal <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CO2_fluxfinal_all.csv")
CH4_fluxfinal<- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/CH4_fluxfinal_all.csv")
# merge in species data to flux data
species <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/Abbey termites .xlsx - Sheet1.csv")
species <- species[c("X", "ID_cleaned")]
# merge sp and CH4flux_final, CO2_fluxfinal
colnames(species)[1] = "sample"
CH4_fluxfinal <- merge(CH4_fluxfinal, species, by = c("sample"))
CO2_fluxfinal <- merge(CO2_fluxfinal, species, by = c("sample"))
# new column for methane:co2
# first need to convert CO2 from mmol to umol (in order to match CH4 in units of umol)
# (conversion factor 1000umol = 1mmol)
CO2_fluxfinal$flux.CO2_umol <- CO2_fluxfinal$flux.CO2*1000
CO2_fluxfinal <- CO2_fluxfinal %>% relocate(flux.CO2_umol, .after = flux.CO2)
# take out just CO2 flux to paste in working CH4_fluxfinal df
a <- CO2_fluxfinal[c("Time_start", "flux.CO2_umol")]
CH4_fluxfinal <- merge(CH4_fluxfinal, a, by = c("Time_start"))
CH4_fluxfinal <- CH4_fluxfinal %>% relocate(flux.CO2_umol, .after = flux.CH4)
CH4_fluxfinal$ch4_co2 <-  CH4_fluxfinal$flux.CH4/CH4_fluxfinal$flux.CO2_umol
CH4_fluxfinal <- CH4_fluxfinal %>% relocate(ch4_co2, .after = flux.CH4)
# new column to add arboreal where 1 = arboreal, 0 = not arboreal
CO2_fluxfinal$arboreal[CO2_fluxfinal$chamber == "mini"] <- 1
CO2_fluxfinal$arboreal[!CO2_fluxfinal$chamber == "mini"] <- 0
CH4_fluxfinal$arboreal[CH4_fluxfinal$chamber == "mini"] <- 1
CH4_fluxfinal$arboreal[!CH4_fluxfinal$chamber == "mini"] <- 0
# subset df to create just methane from soils and just mounds (for later on. just to have df prepped)
soils <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 's',]
mounds <- CH4_fluxfinal[CH4_fluxfinal$flux_source == 'm',]
# arboreal only
arboreal <- mounds[mounds$arboreal == 1,]
# omit arboreal from mound measurements
mounds <- mounds[mounds$arboreal == 0,]
# remove unidentified mounds
mounds[mounds==""] <- NA
mounds_ID <- mounds[!is.na(mounds$ID_cleaned),]
mounds_ID$ID_cleaned <- as.factor(mounds_ID$ID_cleaned)
# remove duplicate ID columns
# mounds_ID <- subset( mounds_ID, select = -c(ID_cleaned.x, ID_cleaned.y) )
# write.csv(mounds, "/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/mounds.csv")
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y1 <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_fluxCH4=mean(flux.CH4),mean_fluxCO2=mean(flux.CO2_umol), mean_fluxCH4CO2=mean(ch4_co2) )
# average temperature by mound via campaign
mounds_ID$mound_campaign <- paste(mounds_ID$sample,mounds_ID$campaign, sep = "-")
x <- aggregate(mounds_ID$avg_respT, list(mounds_ID$mound_campaign), FUN=mean)
colnames(x)[1] = "mound_campaign"
colnames(x)[2] = "mound_temp"
mounds_ID <- merge(mounds_ID, x, by = c("mound_campaign"))
str(mounds_ID)
mounds_ID$campaign <- as.factor(mounds_ID$campaign)
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y1 <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_fluxCH4=mean(flux.CH4),mean_fluxCO2=mean(flux.CO2_umol), mean_fluxCH4CO2=mean(ch4_co2) )
View(y1)
# overall mound methane flux by species
# first find mound averages
mound_average <- mounds_ID %>% group_by(sample) %>%
summarise(mean_fluxCH4=mean(flux.CH4),mean_fluxCO2=mean(flux.CO2_umol), mean_fluxCH4CO2=mean(ch4_co2) )
View(mound_average)
# overall mound methane flux by species
# first find mound averages
mound_average <- mounds_ID %>% group_by(sample, campaign) %>%
summarise(mean_fluxCH4=mean(flux.CH4),mean_fluxCO2=mean(flux.CO2_umol), mean_fluxCH4CO2=mean(ch4_co2) )
View(mounds_ID)
# overall mound methane flux by species
# first find mound averages
mound_average <- mounds_ID %>% group_by(sample, campaign, ID_cleaned) %>%
summarise(mean_fluxCH4=mean(flux.CH4),mean_fluxCO2=mean(flux.CO2_umol), mean_fluxCH4CO2=mean(ch4_co2) )
ggplot(data = mound_average[!mound_average$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..), label.x = 1.5, label.y = 20000) +
theme_classic()
ggplot(data = mound_average[!mound_average$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = ID_cleaned)) +
geom_boxplot()+
stat_compare_means(method = "anova")+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
guides(fill=guide_legend(title=""))+
theme_classic()
aov.mound_average <- aov(mean_fluxCH4 ~ ID_cleaned)
aov.mound_average <- aov(mean_fluxCH4 ~ ID_cleaned, data = mound_average)
summary(aov.mound_average)
# overall methane flux by species contrasted by season
ggplot(data = mounds_ID, aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..), label.x = 1.5, label.y = 20000) +
theme_classic()
# overall methane flux by species contrasted by season
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..), label.x = 1.5, label.y = 20000) +
theme_classic()
ggplot(data = mound_average, aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = ID_cleaned)) +
geom_boxplot()+
stat_compare_means(method = "anova")+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
guides(fill=guide_legend(title=""))+
theme_classic()
ggplot(data = mound_average[!mound_average$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = ID_cleaned)) +
geom_boxplot()+
stat_compare_means(method = "anova")+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
guides(fill=guide_legend(title=""))+
theme_classic()
aov.mound_average <- aov(mean_fluxCH4 ~ ID_cleaned, data = mound_average[!mound_average$ID_cleaned =="Macro",])
summary(aov.mound_average)
mounds_ID[!mounds_ID$ID_cleaned =="Macro",] %>% tukey_hsd(mean_fluxCH4 ~ ID_cleaned)
mound_average[!mound_average$ID_cleaned =="Macro",] %>% tukey_hsd(mean_fluxCH4 ~ ID_cleaned)
summary(aov.mound_average)
TukeyHSD(aov.mound_average, conf.level=.95)
# compare seasons between each species
# first subset mounds by repeated seasonal measures (8 mounds / species)
nov <- mounds_ID[mounds_ID$campaign == "nov22",]
target_mounds <- unique(nov$sample)
# compare seasons between each species
# first subset mounds by repeated seasonal measures (8 mounds / species)
nov <- mound_average[mound_average$campaign == "nov22",]
target_mounds <- unique(nov$sample)
season_contrast <- mound_average[mound_average$sample %in% target_mounds,]
View(season_contrast)
ggplot(season_contrast, aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..), label.x = 1.5, label.y = 20000) +
theme_classic()
ggplot(season_contrast, aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..), label.x = 1.5, label.y = 11000) +
theme_classic()
ggplot(season_contrast, aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..), label.x = 1.5, label.y = 95000) +
theme_classic()
10
ggplot(season_contrast, aes(x = as.factor(ID_cleaned), y = mean_fluxCH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..), label.x = 1.5, label.y = 10000) +
theme_classic()
# t-tests for individual species comparing season
ami <- season_contrast[season_contrast$ID_cleaned == "Ami",]
cop <- season_contrast[season_contrast$ID_cleaned == "Copto",]
nas <- season_contrast[season_contrast$ID_cleaned == "Nasuti",]
stat.test <- ami %>%
t_test(flux.CH4 ~ campaign) %>%
add_significance()
stat.test <- ami %>%
t_test(mean_fluxCH4 ~ campaign) %>%
add_significance()
ggplot(season_contrast, aes(x = as.factor(ID_cleaned), y = mean_fluxCO2, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..), label.x = 1.5, label.y = 10000) +
theme_classic()
t.test(ami$mean_fluxCH4, ami$campaign)
t.test(mean_fluxCH4, campaign, data=ami, paired=TRUE)
t.test(ami$mean_fluxCH4, ami$campaign, data=ami, paired=TRUE)
t.test(ami$mean_fluxCH4, ami$campaign, data=ami, paired=TRUE)
t.test( mean_fluxCH4 ~ campaign, data = ami, paired = TRUE)
t.test( mean_fluxCH4 ~ campaign, data = cop, paired = TRUE)
t.test( mean_fluxCH4 ~ campaign, data = nas, paired = TRUE)
# overall methane flux by species contrasted by season
ggplot(data = mounds_ID[!mounds_ID$ID_cleaned =="Macro",], aes(x = as.factor(ID_cleaned), y = flux.CH4, fill = campaign)) +
geom_boxplot()+
scale_fill_brewer("Blues")+
ylab("CH4 flux umol/d/m2")+
xlab("Species")+
facet_wrap(~ID_cleaned,scales = "free_x" )+
guides(fill=guide_legend(title=""))+
stat_compare_means( aes(label = ..p.signif..), label.x = 1.5, label.y = 20000) +
theme_classic()
# merge in real time data from GPS records of mound being tagged (this is an overall mound estimate for the may campaign mounds)
maytime <- read.csv("/Users/abbeyyatsko/Downloads/mound_gps (1).csv")
maytime <- maytime[c("name", "realtime")]
names(maytime)[1] <- 'sample'
maymounds <- mounds[mounds$campaign == "may22",]
novmounds <- mounds[mounds$campaign == "nov22",]
maymounds <- merge(maymounds, maytime, by = c("sample"))
maymounds <- maymounds %>% relocate(realtime, .after = Time_start)
novtime <- read.csv("/Users/abbeyyatsko/Downloads/novtimes.csv")
names(novtime)[2] <- 'realtime'
novmounds <- merge(novmounds, novtime, by = c("sample"))
novmounds <- novmounds %>% relocate(realtime, .after = Time_start)
ggplot(data = maymounds, aes(x = realtime, y = flux.CH4)) +
geom_boxplot()+
geom_jitter(aes(col=avg_respT))+
scale_color_distiller(palette = "Spectral")+
scale_x_discrete(guide = guide_axis(angle = 90)) +
# facet_wrap(~ID_cleaned)+
ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
ylim(0,18000)+
theme_classic() +
theme(axis.text.x = element_text(size = 5))
# plot for flux by time of day - may
g1 <- ggplot(data = maymounds, aes(x = realtime, y = flux.CH4)) +
geom_boxplot()+
geom_jitter(aes(col=avg_respT))+
scale_color_distiller(palette = "Spectral")+
scale_x_discrete(guide = guide_axis(angle = 90)) +
# facet_wrap(~ID_cleaned)+
ylab("CH4 flux umol/d/m2")+
guides(fill=guide_legend(title="Species"))+
ylim(0,18000)+
theme_classic() +
theme(axis.text.x = element_text(size = 5))
# plot for flux by time of day - nov
g2 <- ggplot(data = novmounds, aes(x = realtime, y = flux.CH4)) +
geom_boxplot()+
geom_jitter(aes(col=avg_respT))+
scale_color_distiller(palette = "Spectral")+
#facet_wrap(~ID_cleaned)+
ylab("CH4 flux umol/d/m2")+
scale_x_discrete(limits=c("8:36:45", "8:52:40", "9:13:40", "9:30:10", "9:36:40", "10:07:00", "10:24:30",
"10:58:00", "11:40:40", "11:43:30", "12:02:15", "12:16:00", "13:32:15", "13:50:30",
"13:52:00", "14:08:30", "14:22:30", "14:31:00", "14:47:00", "14:51:00", "14:57:15",
"15:34:15", "15:55:40", "16:23:00"), guide = guide_axis(angle = 90)) +
guides(fill=guide_legend(title="Species"))+
ylim(0,18000)+
theme_classic()
ggarrange(g1, g2, ncol = 1, common.legend = TRUE)
# find average flux by mound, calculating seperately remeasured mounds
# group by mound_campaign
y1 <- mounds_ID %>% group_by(mound_campaign) %>%
summarise(mean_fluxCH4=mean(flux.CH4),mean_fluxCO2=mean(flux.CO2_umol), mean_fluxCH4CO2=mean(ch4_co2) )
y1 <- separate(y1, col=mound_campaign, into=c('sample', 'campaign'), sep='-')
# merge with mound_SA
mound_SA <- read.csv("/Users/abbeyyatsko/Downloads/mound SA - Sheet1 (1).csv")
mound_SA <- mound_SA[, c('sample', 'working_sa_m2')]
mound_SA <- mound_SA[!is.na(mound_SA$working_sa_m2),]
z <- merge(y1, mound_SA, by = "sample" )
z$totalCH4flux <- z$mean_fluxCH4 * z$working_sa_m2
z$totalCO2flux <- z$mean_fluxCO2 * z$working_sa_m2
z <- merge(z, species, by = "sample" )
# graph mound flux by mound size (use scaled flux - this is the actual flux being represented by the true size of the mound)
# methane
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux), color = campaign)) +  # [z$ID_cleaned == "Ami",]
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~ID_cleaned, ncol = 1)+ # scales = "free_x"
theme_classic()+
ylab("log Total mound CH4 flux umol/d/mound") +
xlab("mound surface area")
# carbon dioxide
ggplot(data =  z[z$ID_cleaned == "Ami",], aes(x = working_sa_m2, y = totalCO2flux, color = campaign)) +
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~ID_cleaned, scales = "free_x")+
theme_classic()+
ylab("Total mound CO2 flux umol/d/mound") +
xlab("mound surface area")
# graph mound flux by mound size (use scaled flux - this is the actual flux being represented by the true size of the mound)
# methane
ggplot(data = z[!z$ID_cleaned == "Macro",], aes(x = working_sa_m2, y = log(totalCH4flux), color = campaign)) +  # [z$ID_cleaned == "Ami",]
geom_point()+
geom_smooth(method = 'lm')+
scale_color_brewer("Blues")+
facet_wrap(~ID_cleaned, ncol = 1)+ # scales = "free_x"
stat_cor(method = "pearson") +
theme_classic()+
ylab("log Total mound CH4 flux umol/d/mound") +
xlab("mound surface area")

labs(x = "Wall Thickness (Centered)", y = "Predicted log(CH4 Flux)",
title = "Effect of Wall Thickness on log(CH4 Flux) by Species") +
theme_minimal() +
theme(legend.title = element_blank())
ggplot(predictions, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Predicted lines
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +  # Confidence intervals
labs(x = "Wall Thickness (Centered)", y = "Predicted log(CH4 Flux)",
title = "Effect of Wall Thickness on log(CH4 Flux) by Species") +
theme_minimal() +
theme(legend.title = element_blank())
predictions$predicted_flux <- exp(predictions$predicted)
predictions$conf.low_flux <- exp(predictions$conf.low)
predictions$conf.high_flux <- exp(predictions$conf.high)
ggplot(predictions, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Predicted lines
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +  # Confidence intervals
labs(x = "Wall Thickness (Centered)", y = "Predicted log(CH4 Flux)",
title = "Effect of Wall Thickness on log(CH4 Flux) by Species") +
theme_minimal() +
theme(legend.title = element_blank())
# Back-transform the predicted values to the original scale
predictions$predicted_flux <- exp(predictions$predicted)
predictions$conf.low_flux <- exp(predictions$conf.low)
predictions$conf.high_flux <- exp(predictions$conf.high)
ggplot(predictions, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Predicted lines
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +  # Confidence intervals
labs(x = "Wall Thickness (Centered)", y = "Predicted log(CH4 Flux)",
title = "Effect of Wall Thickness on log(CH4 Flux) by Species") +
theme_minimal() +
theme(legend.title = element_blank())
predictions <- ggpredict(mod, terms = c("wall_thickness_centered", "species_s"))
# Back-transform the predicted values to the original scale
predictions$predicted_flux <- exp(predictions$predicted)
predictions$conf.low_flux <- exp(predictions$conf.low)
predictions$conf.high_flux <- exp(predictions$conf.high)
ggplot(predictions, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Predicted lines
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +  # Confidence intervals
labs(x = "Wall Thickness (Centered)", y = "Predicted log(CH4 Flux)",
title = "Effect of Wall Thickness on log(CH4 Flux) by Species") +
theme_minimal() +
theme(legend.title = element_blank())
predictions <- ggpredict(mod, terms = c("wall_thickness_centered", "species_s"))
ggplot(predictions, aes(x = x, y = exp(predicted), color = group)) +
geom_line(size = 1) +  # Predicted lines
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +  # Confidence intervals
labs(x = "Wall Thickness (Centered)", y = "Predicted log(CH4 Flux)",
title = "Effect of Wall Thickness on log(CH4 Flux) by Species") +
theme_minimal() +
theme(legend.title = element_blank())
predictions <- ggpredict(mod, terms = c("wall_thickness_centered", "species_s"))
ggplot(predictions, aes(x = x, y = exp(predicted, color = group)) +
ggplot(predictions, aes(x = x, y = exp(predicted, color = group)) +
ggplot(predictions, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Predicted lines
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +  # Confidence intervals
labs(x = "Wall Thickness (Centered)", y = "Predicted log(CH4 Flux)",
title = "Effect of Wall Thickness on log(CH4 Flux) by Species") +
theme_minimal() +
theme(legend.title = element_blank())
ggplot(predictions, aes(x = x, y = predicted, color = group)) +
predictions <- ggpredict(mod, terms = c("wall_thickness_centered", "species_s"))
ggplot(predictions, aes(x = x, y = predicted, color = group)) +
geom_line(size = 1) +  # Predicted lines
geom_ribbon(aes(ymin = conf.low, ymax = conf.high, fill = group), alpha = 0.2) +  # Confidence intervals
labs(x = "Wall Thickness (Centered)", y = "Predicted log(CH4 Flux)",
title = "Effect of Wall Thickness on log(CH4 Flux) by Species") +
theme_minimal() +
theme(legend.title = element_blank())
# check assumptions
qqnorm(resid(mod))
qqline(resid(mod))
plot(fitted(mod), resid(mod))
# look at relationship just for coptotermes
mod <- lmer(flux.CH4 ~ wall_thickness_centered + (1 | ID_mound), data = wt_pos[wt_pos$species_s == "C. acinaciformis",])
# posthoc emmeans
emms <- emmeans(mod, ~ wall_thickness_centered * species_s)
mod <-  lmer(log(flux.CH4) ~ wall_thickness_centered*species_s + (1 | ID_mound), data = wt_pos)
# posthoc emmeans
emms <- emmeans(mod, ~ wall_thickness_centered * species_s)
pairs(emms)
pairs(emms)
ggplot(as.data.frame(posthoc), aes(x = contrast, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
theme_minimal() +
labs(x = "Species and Wall Thickness Comparison", y = "Estimated Difference in log(CH4 Flux)")
posthoc <- pairs(emms)
posthoc <- pairs(emms)
ggplot(as.data.frame(posthoc), aes(x = contrast, y = estimate)) +
geom_point() +
geom_errorbar(aes(ymin = lower.CL, ymax = upper.CL), width = 0.2) +
theme_minimal() +
labs(x = "Species and Wall Thickness Comparison", y = "Estimated Difference in log(CH4 Flux)")
ggplot(as.data.frame(posthoc), aes(x = contrast, y = estimate)) +
+     geom_point()
ggplot(as.data.frame(posthoc), aes(x = contrast, y = estimate)) +
geom_point()
pairs(emms)
ggplot(wt_pos, aes(x = wall_thickness_centered, y = flux.CH4, color = species)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Relationship Between Wall Thickness and CH4 Flux",
x = "Wall Thickness (mm)",
y = "CH4 Flux")
dev.off()
_
ggplot(wt_pos, aes(x = wall_thickness_centered, y = flux.CH4, color = species)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Relationship Between Wall Thickness and CH4 Flux",
x = "Wall Thickness (mm)",
y = "CH4 Flux")
mod <-  lmer(log(flux.CH4) ~ wall_thickness_centered*species_s + (1 | ID_mound), data = wt_pos)
Anova(mod)
# posthoc emmeans
emms <- emmeans(mod, ~ wall_thickness_centered | species_s)
pairs(emms)
# check assumptions
qqnorm(resid(mod))
qqline(resid(mod))
plot(fitted(mod), resid(mod))
ggplot(wt_pos, aes(x = wall_thickness_centered, y = log(flux.CH4), color = species_s)) +
geom_point() +
geom_smooth(method = "lm", aes(group = species_s)) +
labs(x = "Wall Thickness (Centered)", y = "Log of CH4 Flux", color = "Species")
ggplot(wt_pos, aes(x = wall_thickness_centered, y = flux.CH4, color = species)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Relationship Between Wall Thickness and CH4 Flux",
x = "Wall Thickness (mm)",
y = "CH4 Flux")
summary(emms)
emms <- emmeans(mod, ~ wall_thickness_centered | species_s)
summary(emms)
summary(mod)
emm <- emmeans(mod, pairwise ~ wall_thickness_centered * species_s)
pairs(emm, by = "species_s")
summary(mod)
ggplot(wt_pos, aes(x = wall_thickness_centered, y = flux.CH4, color = species)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Relationship Between Wall Thickness and CH4 Flux",
x = "Wall Thickness (mm)",
y = "CH4 Flux")
ggplot(wt_pos, aes(x = wall_thickness_centered, y = log(flux.CH4), color = species)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Relationship Between Wall Thickness and CH4 Flux",
x = "Wall Thickness (mm)",
y = "CH4 Flux")
mod <- lmer(mound_CH4flux ~ volume_m3_final_centered*species_s + (1 | sample), data = all_fluxes_mound_avg)
summary(mod)
Anova(mod)
mod <- lmer(mound_CH4flux ~ volume_m3_final_centered*species_s + (1 | sample), data = all_fluxes_mound_avg)
qqnorm(resid(mod))
qqline(resid(mod))
plot(fitted(mod), resid(mod))
emms <- emmeans(mod, ~ volume_m3_final_centered | species_s)
summary(emms)
ggplot(all_fluxes_mound_avg, aes(x = volume_m3_final_centered, y = log(flux.CH4), color = species)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Relationship Between Mound Volume and CH4 Flux",
x = "Mound Volume (m3)",
y = "CH4 Flux")
ggplot(all_fluxes_mound_avg, aes(x = volume_m3_final_centered, y = log(mound_CH4flux), color = species)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Relationship Between Mound Volume and CH4 Flux",
x = "Mound Volume (m3)",
y = "CH4 Flux")
ggplot(all_fluxes_mound_avg, aes(x = volume_m3_final_centered, y = (mound_CH4flux), color = species)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Relationship Between Mound Volume and CH4 Flux",
x = "Mound Volume (m3)",
y = "CH4 Flux")
ggplot(all_fluxes_mound_avg, aes(x = volume_m3_final_centered, y = (mound_CH4flux), color = species)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Relationship Between Mound Volume and CH4 Flux",
x = "Mound Volume (m3)",
y = "CH4 Flux")
ggplot(all_fluxes_mound_avg, aes(x = volume_m3_final_centered, y = (mound_CH4flux), color = species_s)) +
geom_point() +
geom_smooth(method = "lm") +
theme_minimal() +
labs(title = "Relationship Between Mound Volume and CH4 Flux",
x = "Mound Volume (m3)",
y = "CH4 Flux")
summary(mod)
emms <- emmeans(mod, ~ volume_m3_final_centered | species_s)
summary(emms)
summary(mod)
mod <-  lmer(log(flux.CH4) ~ wall_thickness_centered*species_s + (1 | ID_mound), data = wt_pos)
summary(mod)
# Q1: How does CH4 flux change by season?
mod <- lmer(mean_mound_fluxCH4 ~ campaign + (1 | species_s) + (1 | sample), data = all_fluxes_seasonal_avg)
# Q1: How does CH4 flux change by season?
mod <- lmer(mean_mound_fluxCH4 ~ campaign + (1 | species_s) + (1 | sample), data = all_fluxes_resample_reps_avg)
summary(mod)
emm <- emmeans(mod, ~ campaign)
pairs(emm)
qqnorm(resid(mod))
qqline(resid(mod))
plot(fitted(mod), resid(mod))
# Q2: How does CH4 flux change by temperature?
# LINEAR
mod <- lmer(mean_mound_fluxCH4 ~ temp + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_seasonal_avg)
# Q2: How does CH4 flux change by temperature?
# LINEAR
mod <- lmer(mean_mound_fluxCH4 ~ temp + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_resample_reps_avg)
Anova(mod)
# Q2: How does CH4 flux change by temperature?
# LINEAR
mod <- lmer(mean_mound_fluxCH4 ~ temp*campaign + (1 | sample) + (1 | species_s), data = all_fluxes_resample_reps_avg)
Anova(mod)
ggplot(all_fluxes_seasonal_avg, aes(x = campaign, y = mean_mound_fluxCH4, fill = campaign))+
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
scale_x_discrete(labels = c("Wet-to-dry", "Mid-dry", "Dry-to-wet", "Mid-wet"))+
theme_classic()+
theme(legend.position = "none")
all_fluxes_seasonal_avg <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps_avg.csv")
# Q1: How does CH4 flux change by season?
all_fluxes_seasonal_avg$campaign <- factor(all_fluxes_seasonal_avg$campaign, levels = c("may22", "aug23", "nov22", "feb24"))
all_fluxes_seasonal_avg$species_s <- as.factor(all_fluxes_seasonal_avg$species_s)
ggplot(all_fluxes_seasonal_avg, aes(x = campaign, y = mean_mound_fluxCH4, fill = campaign))+
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
scale_x_discrete(labels = c("Wet-to-dry", "Mid-dry", "Dry-to-wet", "Mid-wet"))+
theme_classic()+
theme(legend.position = "none")
# include species variation
ggplot(all_fluxes_seasonal_avg, aes(x = campaign, y = mean_mound_fluxCH4, fill = species_s))+
geom_boxplot()+
ylab("CH4 flux umol/d/m2")+
xlab("")+
scale_x_discrete(labels = c("Wet-to-dry", "Mid-dry", "Dry-to-wet", "Mid-wet"))+
scale_fill_manual(values = c("A. laurensis" = "#1b9e77", "C. acinaciformis" = "#d95f02", "N. magnus" =
"#7570b3")) +
theme_classic()
Anova(mod)
# Q2: How does CH4 flux change by temperature?
# LINEAR
mod <- lmer(mean_mound_fluxCH4 ~ temp + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_resample_reps_avg)
Anova(mod)
# Q2: How does CH4 flux change by temperature?
# LINEAR
mod <- lmer(mean_mound_fluxCH4 ~ temp  + (1 | sample) + (1 | species_s), data = all_fluxes_resample_reps_avg)
Anova(mod)
# Q2: How does CH4 flux change by temperature?
# LINEAR
mod <- lmer(mean_mound_fluxCH4 ~ temp + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_resample_reps_avg)
Anova(mod)
qqnorm(resid(mod))
qqline(resid(mod))
plot(fitted(mod), resid(mod))
# POLYNOMIAL
mod_poly <- lmer(mean_mound_fluxCH4 ~ poly(temp, 2) + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_seasonal_avg)
Anova(mod_poly)
summary(mod)
residuals <- resid(mod_poly)
fitted_values <- fitted(mod_poly)
anova(mod, mod_poly)
# Q2: How does CH4 flux change by temperature?
# LINEAR
mod <- lmer(mean_mound_fluxCH4 ~ temp + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_resample_reps_avg)
# POLYNOMIAL
mod_poly <- lmer(mean_mound_fluxCH4 ~ poly(temp, 2) + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_seasonal_avg)
anova(mod, mod_poly)
Anova(mod_poly, type = "III")
# Q2: How does CH4 flux change by temperature?
# LINEAR
mod <- lmer(mean_mound_fluxCH4 ~ temp + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_resample_reps_avg)
summary(mod)
# POLYNOMIAL
mod_poly <- lmer(mean_mound_fluxCH4 ~ poly(temp, 2) + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_seasonal_avg)
# POLYNOMIAL
mod_poly <- lmer(mean_mound_fluxCH4 ~ poly(temp, 2) + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_resample_reps_avg)
summary(mod_poly)
Anova(mod_poly, type = "III")
anova(mod_linear, mod_poly)
anova(mod, mod_poly)
ggplot(all_fluxes_seasonal_avg, aes(x = temp, y = mean_mound_fluxCH4, color = campaign))+
geom_point(size = 4)+
geom_smooth(method = 'lm', se = FALSE)+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
scale_color_brewer(palette = "Dark2")+
ggtitle("a)") +
theme_classic()
# Q2: How does CH4 flux change by temperature?
# LINEAR
a <- ggplot(all_fluxes_seasonal_avg, aes(x = temp, y = mean_mound_fluxCH4, color = campaign))+
geom_point(size = 1)+
geom_smooth(method = 'lm', se = FALSE)+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
scale_color_brewer(palette = "Dark2")+
ggtitle("a)") +
theme_classic()
a
# Q2: How does CH4 flux change by temperature?
# LINEAR
a <- ggplot(all_fluxes_seasonal_avg, aes(x = temp, y = mean_mound_fluxCH4, color = campaign))+
geom_point(size = 2, alpha = 0.8)+
geom_smooth(method = 'lm', se = FALSE)+
ylab("CH4 flux umol/d/m2")+
xlab("Average Mound Surface Temperature (C)")+
scale_color_brewer(palette = "Dark2")+
ggtitle("a)") +
theme_classic()
a
summary(mod)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
library(ggpubr)
library(datawizard)
library(lme4)
library(car)
metadata <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/data_out/metagenomes_metadata.csv")
top_e <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/data_out/q1_top_emitters.csv")
var_e <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/data_out/q2_variable_emitters.csv")
fluxes <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_mound.csv")
targets <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/metagenomes/targets.csv")
wt <- fluxes[!is.na(fluxes$wall_thickness_mm), ]
ko <- read.delim("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/metagenomes/ko.table(ReadsPerSample).txt", header = TRUE, sep = "\t")
pathway <- read.delim("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/metagenomes/pathway.table(ReadsPerSample).txt", header = TRUE, sep = "\t")
cazymes <- read.delim("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/metagenomes/CAZy.single.table(ReadsPerSample).txt", header = TRUE, sep = "\t")
fluxes <- fluxes[fluxes$campaign == "may22", ]
fluxes$extract_ID <- paste(fluxes$sample,"-",fluxes$tag, "-", fluxes$position, sep = "")
wt_merge <- wt[, c("ID_measurement", "wall_thickness_mm")]
x <- fluxes[, c("ID_measurement", "extract_ID", "flux.CH4", "avg_respT")]
x <- left_join(x, wt_merge, by = "ID_measurement")
# merge x and metadata
metadata <- left_join(metadata, x, by = "extract_ID")
# pathways
integer_cols <- sapply(pathway, is.integer)
total_reads <- colSums(pathway[, integer_cols])
total_reads_path <- data.frame(
Sample = names(total_reads),
Sum = total_reads,
row.names = NULL
)
# plot distribution of total reads per sample
ggplot(total_reads_path, aes(x = reorder(Sample, -Sum), y = Sum)) +
geom_bar(stat = "identity") +
labs(title = "Pathway table - reads per sample", x = "Total reads", y = "Frequency") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# insufficient data: A108 (low 260/230), A109 (low 260/230), A107 (really low 260/230) (all MD64), A38 (low 260/230), A40 (really low 260/230) (all MD32), may have insufficient data - remove
pathway_ok <- pathway[ , !names(pathway) %in%
c("A108","A109", "A107", "A38", "A40")]
pathway_ok <- pathway_ok[, -1]
# data to long format
pathway_ok_long <- pathway_ok %>%
pivot_longer(cols = -pathway, names_to = "sequencing_id", values_to = "reads")
# resample for lower limit
total_reads_path <- total_reads_path[!(total_reads_path$Sample %in% c("A108","A109", "A107", "A38", "A40")), ]
lower_limit <- min(total_reads_path$Sum)
resampled_data <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/metagenomes/resampled_data.csv")
resampled_data <- resampled_data[, -1]
# sum of reads by sample (should equal lower_limit for all samples)
total_reads_resampled <- resampled_data %>%
group_by(sequencing_id) %>%
summarise(Sum = sum(resampled_reads))
pathway_ok_long <- left_join(pathway_ok_long, total_reads_path, by = c("sequencing_id" = "Sample"))
pathway_ok_long$relabund <- pathway_ok_long$reads/pathway_ok_long$Sum
pathway_ok_long %>% group_by(sequencing_id) %>% summarise(Sum_prop = sum(relabund)) -> out
# join with resampled data
pathway_ok_long <- left_join(pathway_ok_long, resampled_data, by = c("sequencing_id", "pathway"))
pathway_ok_long$resampled_sum <- lower_limit
pathway_ok_long$resampled_relabund <- pathway_ok_long$resampled_reads/pathway_ok_long$resampled_sum
# bar plot summary of relative abundance
a <- ggplot(pathway_ok_long, aes(x = sequencing_id, y = relabund, fill = pathway)) +
geom_bar(stat = "identity") +
labs(title = "Pathway table - relative abundance per sample", x = "Sample", y = "Relative abundance") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
b <- ggplot(pathway_ok_long, aes(x = sequencing_id, y = resampled_relabund, fill = pathway)) +
geom_bar(stat = "identity") +
labs(title = "Pathway table - relative abundance per sample (resampled)", x = "Sample", y = "Relative abundance") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
ggarrange(a, b, ncol = 2)
methane_pathway <- pathway_ok_long[pathway_ok_long$pathway == "Methane metabolism", ]
c <- ggplot(methane_pathway, aes(x = sequencing_id, y = relabund, fill = sequencing_id)) +
geom_bar(stat = "identity") +
labs(title = "Relative abundance of methane pathway per sample", x = "Sample", y = "Relative abundance") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
d <- ggplot(methane_pathway, aes(x = sequencing_id, y = resampled_relabund, fill = sequencing_id)) +
geom_bar(stat = "identity") +
labs(title = "Relative abundance of methane pathway per sample (resampled)", x = "Sample", y = "Relative abundance") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
ggarrange(c, d, ncol = 2)
# direct comparison
methane_pathway$relabund_diff <- methane_pathway$relabund - methane_pathway$resampled_relabund
ggplot(methane_pathway, aes(x = sequencing_id, y = relabund_diff, fill = sequencing_id)) +
geom_bar(stat = "identity") +
labs(title = "Difference in relative abundance from resampling", x = "Sample", y = "Relative abundance") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
mean_relabund <- mean(methane_pathway$resampled_relabund)
# average relative abundance by pathway
pathway_ok_long %>% group_by(pathway) %>%
summarise(mean_relabund = mean(relabund),
mean_resampled_relabund = mean(resampled_relabund)) -> each_pathway_relabund
ggplot(each_pathway_relabund, aes(x = pathway, y = mean_resampled_relabund, fill = pathway)) +
geom_bar(stat = "identity") +
labs(title = "Mean realative abundance per pathway", x = "Pathway", y = "Relative abundance") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none") +
geom_hline(yintercept = mean_relabund, linetype = "dashed") # mean methane metabolism relative abundance
# methane metabolism is 16th most abundant pathway present in the sample
flux_relabund <- left_join(methane_pathway, metadata, by = c("sequencing_id"))
flux_relabund$species <- as.factor(flux_relabund$species)
# remove samples with no methane flux data
flux_relabund <- flux_relabund[!is.na(flux_relabund$flux.CH4), ]
# standardise data by rescaling with mean = 0 and sd = 1
flux_relabund <- flux_relabund %>%
mutate(resampled_relabund_scaled = standardize(resampled_relabund))
flux_relabund$resampled_relabund_scaled <- as.numeric(flux_relabund$resampled_relabund_scaled)
# consider only positive values in the model
flux_relabund_pos <- flux_relabund[flux_relabund$flux.CH4 > 0, ]
# does greater relative abundance of methane metabolism pathway correlate with lower methane flux?
ggplot(flux_relabund_pos, aes(x = resampled_relabund_scaled, y = flux.CH4)) +
geom_point() +
geom_smooth(method = "lm") +
theme_classic()
mod <- lmer(log(flux.CH4) ~ resampled_relabund_scaled + (1|sample), data = flux_relabund_pos)
summary(mod)
Anova(mod)
# check assumptions
qqnorm(resid(mod))
qqline(resid(mod))
plot(fitted(mod), resid(mod))
random_effects <- ranef(mod)$sample[, 1]
qqnorm(random_effects)
qqline(random_effects)
# does greater relative abundance of methane metabolism pathway correlate with lower methane flux?
ggplot(flux_relabund_pos, aes(x = resampled_relabund_scaled, y = flux.CH4)) +
geom_point() +
geom_smooth(method = "lm") +
theme_classic()
mod <- lmer(log(flux.CH4) ~ resampled_relabund_scaled + (1|sample), data = flux_relabund_pos)
summary(mod)
Anova(mod)
View(pathway)
library(ggplot2)
library(lme4)
library(car)
library(easystats)
library(ggeffects)
library(vegan)
library(partR2)
library(patchwork)
library(emmeans)
p_fluxes_f <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/p_fluxes_f.csv")
all_fluxes_mound_avg <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_mound_avg.csv")
all_fluxes_mound <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_mound.csv")
all_fluxes_resample_reps_avg <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_fluxes_resample_reps_avg.csv")
all_fluxes_daily <- read.csv("/Users/abbeyyatsko/Desktop/repos/TMI_flux/data/finalfluxes/all_daily_fluxes.csv")
# Q1: How does TEF vary across study species (fluxes from individuals)
# test for differences between species
p_fluxes_f$species <- as.factor(p_fluxes_f$species)
mod <- aov(TEF_ug_g_h ~ species, data = p_fluxes_f)
summary(mod)
# determine which species are different
emmeans(mod, pairwise ~ species)
# Q2: How do mound fluxes vary across study species
all_fluxes_mound$ID_mound <- as.factor(all_fluxes_mound$ID_mound)
all_fluxes_mound$species_s <- as.factor(all_fluxes_mound$species_s)
mod <- lmer(flux.CH4 ~ species_s + (1 | ID_mound), data = all_fluxes_mound)
summary(mod)
Anova(mod)
emmeans(mod, pairwise ~ species_s)
# determine which species are different
emmeans(mod, pairwise ~ species)
# Q1: How does TEF vary across study species (fluxes from individuals)
# test for differences between species
p_fluxes_f$species <- as.factor(p_fluxes_f$species)
mod <- aov(TEF_ug_g_h ~ species, data = p_fluxes_f)
summary(mod)
# determine which species are different
emmeans(mod, pairwise ~ species)
# Q2: How does CH4 flux change by temperature?
# LINEAR
mod <- lmer(mean_mound_fluxCH4 ~ temp * campaign + (1 | sample) + (1 | species_s), data = all_fluxes_resample_reps_avg)
summary(mod)
Anova(mod)
# Q2: How does CH4 flux change by temperature?
# LINEAR
mod <- lmer(mean_mound_fluxCH4 ~ temp + campaign + (1 | sample) + (1 | species_s), data = all_fluxes_resample_reps_avg)
